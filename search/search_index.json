{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"CTF Tools \u00b6 \u6b22\u8fce\u63d0\u51fa\u610f\u89c1\u548c\u5efa\u8bae \u70b9\u51fb\u6b64\u5904 \uff0c\u5e2e\u52a9 CTF Tools \u66f4\u52a0\u5b8c\u5584\u3002 Get Started \u5f00\u59cb\u4f7f\u7528 \u00b6 CTF \u519b\u706b\u5e93\uff0c\u6536\u96c6 CTF \u7ade\u8d5b\u76f8\u5173\u7684\u5de5\u5177\u3001\u811a\u672c\u548c\u5b89\u5168\u9886\u57df\u7684\u4f1a\u8bae PPT \u7b49\uff0c\u91c7\u7528 MkDocs \u90e8\u7f72\u3002\u3002 Collections \u5de5\u5177\u5408\u96c6 Environment \u73af\u5883\u914d\u7f6e Misc \u6742\u9879 Crypto \u5bc6\u7801\u5b66 Reverse \u9006\u5411\u5de5\u7a0b Pwn \u4e8c\u8fdb\u5236\u6f0f\u6d1e\u6316\u6398 Web \u7f51\u7ad9\u5e94\u7528 Papers \u5b89\u5168\u76f8\u5173\u4f1a\u8bae PPT\u3001\u4e66\u7c4d \u7531 CTF Wiki \u56e2\u961f\u7ef4\u62a4\u3002 Warning \u672c\u7ad9\u6240\u6709\u5de5\u5177\u6536\u96c6\u81ea\u7f51\u7edc\uff0c\u8bf7\u81ea\u884c\u67e5\u6bd2\u67e5\u540e\u95e8\u3002 Material color palette \u989c\u8272\u4e3b\u9898 \u00b6 Primary colors \u4e3b\u8272 \u00b6 \u9ed8\u8ba4 white \u70b9\u51fb\u8272\u5757\u53ef\u66f4\u6362\u4e3b\u9898\u7684\u4e3b\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange Brown Grey Blue Grey White var buttons = document.querySelectorAll(\"button[data-md-color-primary]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary; }) }) Accent colors \u8f85\u52a9\u8272 \u00b6 \u9ed8\u8ba4 red \u70b9\u51fb\u8272\u5757\u66f4\u6362\u4e3b\u9898\u7684\u8f85\u52a9\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorAccent = this.dataset.mdColorAccent; }) })","title":"Getting started \u5f00\u59cb\u4f7f\u7528"},{"location":"#ctf-tools","text":"\u6b22\u8fce\u63d0\u51fa\u610f\u89c1\u548c\u5efa\u8bae \u70b9\u51fb\u6b64\u5904 \uff0c\u5e2e\u52a9 CTF Tools \u66f4\u52a0\u5b8c\u5584\u3002","title":"CTF Tools"},{"location":"#get-started","text":"CTF \u519b\u706b\u5e93\uff0c\u6536\u96c6 CTF \u7ade\u8d5b\u76f8\u5173\u7684\u5de5\u5177\u3001\u811a\u672c\u548c\u5b89\u5168\u9886\u57df\u7684\u4f1a\u8bae PPT \u7b49\uff0c\u91c7\u7528 MkDocs \u90e8\u7f72\u3002\u3002 Collections \u5de5\u5177\u5408\u96c6 Environment \u73af\u5883\u914d\u7f6e Misc \u6742\u9879 Crypto \u5bc6\u7801\u5b66 Reverse \u9006\u5411\u5de5\u7a0b Pwn \u4e8c\u8fdb\u5236\u6f0f\u6d1e\u6316\u6398 Web \u7f51\u7ad9\u5e94\u7528 Papers \u5b89\u5168\u76f8\u5173\u4f1a\u8bae PPT\u3001\u4e66\u7c4d \u7531 CTF Wiki \u56e2\u961f\u7ef4\u62a4\u3002 Warning \u672c\u7ad9\u6240\u6709\u5de5\u5177\u6536\u96c6\u81ea\u7f51\u7edc\uff0c\u8bf7\u81ea\u884c\u67e5\u6bd2\u67e5\u540e\u95e8\u3002","title":"Get Started \u5f00\u59cb\u4f7f\u7528"},{"location":"#material-color-palette","text":"","title":"Material color palette \u989c\u8272\u4e3b\u9898"},{"location":"#primary-colors","text":"\u9ed8\u8ba4 white \u70b9\u51fb\u8272\u5757\u53ef\u66f4\u6362\u4e3b\u9898\u7684\u4e3b\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange Brown Grey Blue Grey White var buttons = document.querySelectorAll(\"button[data-md-color-primary]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorPrimary = this.dataset.mdColorPrimary; }) })","title":"Primary colors \u4e3b\u8272"},{"location":"#accent-colors","text":"\u9ed8\u8ba4 red \u70b9\u51fb\u8272\u5757\u66f4\u6362\u4e3b\u9898\u7684\u8f85\u52a9\u8272 Red Pink Purple Deep Purple Indigo Blue Light Blue Cyan Teal Green Light Green Lime Yellow Amber Orange Deep Orange var buttons = document.querySelectorAll(\"button[data-md-color-accent]\"); Array.prototype.forEach.call(buttons, function(button) { button.addEventListener(\"click\", function() { document.body.dataset.mdColorAccent = this.dataset.mdColorAccent; }) })","title":"Accent colors \u8f85\u52a9\u8272"},{"location":"collections/","text":"\u5de5\u5177\u5408\u96c6 \u00b6 \u540d\u79f0 \u7b80\u4ecb \u767e\u5ea6\u7f51\u76d8 \u63d0\u53d6\u7801 CTF \u5de5\u5177\u5408\u96c6 \u7cbe\u7075\u8868\u54e5\u6574\u7406 \u4e0b\u8f7d 1t65 \u5206\u7c7b\u8be6\u5c3d\u7684\u5de5\u5177\u5408\u96c6 \u4f5a\u540d \u4e0b\u8f7d 7tt4 \u8d44\u6e90\u6765\u81ea http://down.ctftools.com","title":"Collections \u5de5\u5177\u5408\u96c6"},{"location":"collections/#_1","text":"\u540d\u79f0 \u7b80\u4ecb \u767e\u5ea6\u7f51\u76d8 \u63d0\u53d6\u7801 CTF \u5de5\u5177\u5408\u96c6 \u7cbe\u7075\u8868\u54e5\u6574\u7406 \u4e0b\u8f7d 1t65 \u5206\u7c7b\u8be6\u5c3d\u7684\u5de5\u5177\u5408\u96c6 \u4f5a\u540d \u4e0b\u8f7d 7tt4 \u8d44\u6e90\u6765\u81ea http://down.ctftools.com","title":"\u5de5\u5177\u5408\u96c6"},{"location":"crypto/","text":"Crypto \u00b6 \u53e4\u5178\u5bc6\u7801 \u00b6 CAP4 JPK - 406 RC4 \u5728\u7ebf\u52a0\u89e3\u5bc6 \u6805\u680f\u5bc6\u7801\u52a0\u89e3\u5bc6\u5de5\u5177 \u6469\u65af\u5bc6\u7801\u5728\u7ebf\u52a0\u89e3\u5bc6 \u7ef4\u5409\u5c3c\u4e9a\u5bc6\u7801\u5728\u7ebf\u89e3\u5bc6 1 \u7ef4\u5409\u5c3c\u4e9a\u5bc6\u7801\u5728\u7ebf\u89e3\u5bc6 2 \u53a6\u5927 ph0en1x \u5728\u7ebf\u5bc6\u7801\u5de5\u5177 \u5bc6\u7801\u673a\u5668 \u6805\u680f\u3001\u51ef\u6492\u3001\u7ef4\u5409\u5c3c\u4e9a\u3001\u6469\u65af\u3001\u7f6e\u6362\u7b49\u3002 quipquip \u79fb\u4f4d\u5bc6\u7801\u7834\u89e3\u3002 PYG \u5bc6\u7801\u5b66\u7efc\u5408\u5de5\u5177 RSA \u00b6 yafu \u5927\u6570\u5206\u89e3 factordb \u5728\u7ebf\u5927\u6570\u5206\u89e3 RSATool wiener-attack rsatool python rsatool.py -f PEM -o key.pem -n 13826123222358393307 -d 9793706120266356337 python rsatool.py -f DER -o key.der -p 4184799299 -q 3303891593 Hash \u00b6 CRC32 \u78b0\u649e\u811a\u672c crc32.py -h usage: crc32.py [ -h ] action ... Reverse, undo, and calculate CRC32 checksums positional arguments: action flip flip the bits to convert normal ( msbit-first ) polynomials to reversed ( lsbit-first ) and vice versa reciprocal find the reciprocal ( Koopman notation ) of a reversed ( lsbit- first ) polynomial and vice versa table generate a lookup table for a polynomial reverse find a patch that causes the CRC32 checksum to become a desired value undo rewind a CRC32 checksum calc calculate the CRC32 checksum optional arguments: -h, --help show this help message and exit \u5176\u4ed6 \u00b6 Cisco \u5bc6\u7801\u5728\u7ebf\u7834\u89e3 Base64 \u52a0\u89e3\u5bc6","title":"\u57fa\u672c\u5de5\u5177"},{"location":"crypto/#crypto","text":"","title":"Crypto"},{"location":"crypto/#_1","text":"CAP4 JPK - 406 RC4 \u5728\u7ebf\u52a0\u89e3\u5bc6 \u6805\u680f\u5bc6\u7801\u52a0\u89e3\u5bc6\u5de5\u5177 \u6469\u65af\u5bc6\u7801\u5728\u7ebf\u52a0\u89e3\u5bc6 \u7ef4\u5409\u5c3c\u4e9a\u5bc6\u7801\u5728\u7ebf\u89e3\u5bc6 1 \u7ef4\u5409\u5c3c\u4e9a\u5bc6\u7801\u5728\u7ebf\u89e3\u5bc6 2 \u53a6\u5927 ph0en1x \u5728\u7ebf\u5bc6\u7801\u5de5\u5177 \u5bc6\u7801\u673a\u5668 \u6805\u680f\u3001\u51ef\u6492\u3001\u7ef4\u5409\u5c3c\u4e9a\u3001\u6469\u65af\u3001\u7f6e\u6362\u7b49\u3002 quipquip \u79fb\u4f4d\u5bc6\u7801\u7834\u89e3\u3002 PYG \u5bc6\u7801\u5b66\u7efc\u5408\u5de5\u5177","title":"\u53e4\u5178\u5bc6\u7801"},{"location":"crypto/#rsa","text":"yafu \u5927\u6570\u5206\u89e3 factordb \u5728\u7ebf\u5927\u6570\u5206\u89e3 RSATool wiener-attack rsatool python rsatool.py -f PEM -o key.pem -n 13826123222358393307 -d 9793706120266356337 python rsatool.py -f DER -o key.der -p 4184799299 -q 3303891593","title":"RSA"},{"location":"crypto/#hash","text":"CRC32 \u78b0\u649e\u811a\u672c crc32.py -h usage: crc32.py [ -h ] action ... Reverse, undo, and calculate CRC32 checksums positional arguments: action flip flip the bits to convert normal ( msbit-first ) polynomials to reversed ( lsbit-first ) and vice versa reciprocal find the reciprocal ( Koopman notation ) of a reversed ( lsbit- first ) polynomial and vice versa table generate a lookup table for a polynomial reverse find a patch that causes the CRC32 checksum to become a desired value undo rewind a CRC32 checksum calc calculate the CRC32 checksum optional arguments: -h, --help show this help message and exit","title":"Hash"},{"location":"crypto/#_2","text":"Cisco \u5bc6\u7801\u5728\u7ebf\u7834\u89e3 Base64 \u52a0\u89e3\u5bc6","title":"\u5176\u4ed6"},{"location":"environment/","text":"\u73af\u5883\u642d\u5efa \u00b6 Kali Linux \u00b6 \u5b98\u7f51 \u5b89\u88c5\u955c\u50cf\u4e0b\u8f7d\uff08\u4e2d\u79d1\u5927\uff09 \u865a\u62df\u673a\u955c\u50cf\u4e0b\u8f7d\uff08\u5b98\u7f51\uff09 Java \u00b6 JRE JDK Python \u00b6 Python pip \u8c46\u74e3\u6e90\u8bbe\u7f6e \u5728 ~/.pip/ \u76ee\u5f55\u4e0b\u65b0\u5efa pip.ini \uff08Windows\uff09\u6216 pip.conf \uff08Linux\uff09\u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a [global] index-url = http://pypi.douban.com/simple trusted-host = pypi.douban.com [list] format = columns Offline Docs \u00b6 \u5f53\u4f60\u5904\u4e8e\u6ca1\u6709\u5916\u7f51\u7684\u73af\u5883\u65f6\uff0c\u81ea\u5df1\u7559\u5728\u672c\u5730\u7684\u8d44\u6599\u5c31\u663e\u5f97\u5c24\u4e3a\u91cd\u8981\u3002 \u4e4c\u4e91\u6f0f\u6d1e\u77e5\u8bc6\u5e93\u955c\u50cf \u767e\u5ea6\u7f51\u76d8 \u63d0\u53d6\u7801 5ik7 Zeal Zeal is an offline documentation browser for software developers. \u8fd9\u4e1c\u897f\u6709\u4e2a\u7f3a\u70b9\u3002\u3002\u3002\u4e0b\u8f7d\u7684\u65f6\u5019\u5f88\u6162\uff0c\u6302\u4e86\u4ee3\u7406\u597d\u50cf\u7a0d\u5fae\u597d\u70b9\u3002\u3002\u3002 Zeal portable \u81ea\u5df1\u6253\u7684 docset \u538b\u7f29\u5305 \u5305\u62ec Bash\u3001C\u3001C++\u3001CSS\u3001Django\u3001Docker\u3001ElasticSearch\u3001Flask\u3001Go\u3001HTML\u3001JavaScript\u3001Java SE 8\u3001Laravel\u3001MySQL\u3001Nginx\u3001PHP\u3001Python 2\u3001Python 3\u3001Vim\u3001WordPress\u3002 \u79d1\u5b66\u4e0a\u7f51 \u00b6 \u7531\u4e8e\u4f17\u6240\u5468\u77e5\u7684\u539f\u56e0\uff0c","title":"Environment \u73af\u5883\u914d\u7f6e"},{"location":"environment/#_1","text":"","title":"\u73af\u5883\u642d\u5efa"},{"location":"environment/#kali-linux","text":"\u5b98\u7f51 \u5b89\u88c5\u955c\u50cf\u4e0b\u8f7d\uff08\u4e2d\u79d1\u5927\uff09 \u865a\u62df\u673a\u955c\u50cf\u4e0b\u8f7d\uff08\u5b98\u7f51\uff09","title":"Kali Linux"},{"location":"environment/#java","text":"JRE JDK","title":"Java"},{"location":"environment/#python","text":"Python pip \u8c46\u74e3\u6e90\u8bbe\u7f6e \u5728 ~/.pip/ \u76ee\u5f55\u4e0b\u65b0\u5efa pip.ini \uff08Windows\uff09\u6216 pip.conf \uff08Linux\uff09\u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a [global] index-url = http://pypi.douban.com/simple trusted-host = pypi.douban.com [list] format = columns","title":"Python"},{"location":"environment/#offline-docs","text":"\u5f53\u4f60\u5904\u4e8e\u6ca1\u6709\u5916\u7f51\u7684\u73af\u5883\u65f6\uff0c\u81ea\u5df1\u7559\u5728\u672c\u5730\u7684\u8d44\u6599\u5c31\u663e\u5f97\u5c24\u4e3a\u91cd\u8981\u3002 \u4e4c\u4e91\u6f0f\u6d1e\u77e5\u8bc6\u5e93\u955c\u50cf \u767e\u5ea6\u7f51\u76d8 \u63d0\u53d6\u7801 5ik7 Zeal Zeal is an offline documentation browser for software developers. \u8fd9\u4e1c\u897f\u6709\u4e2a\u7f3a\u70b9\u3002\u3002\u3002\u4e0b\u8f7d\u7684\u65f6\u5019\u5f88\u6162\uff0c\u6302\u4e86\u4ee3\u7406\u597d\u50cf\u7a0d\u5fae\u597d\u70b9\u3002\u3002\u3002 Zeal portable \u81ea\u5df1\u6253\u7684 docset \u538b\u7f29\u5305 \u5305\u62ec Bash\u3001C\u3001C++\u3001CSS\u3001Django\u3001Docker\u3001ElasticSearch\u3001Flask\u3001Go\u3001HTML\u3001JavaScript\u3001Java SE 8\u3001Laravel\u3001MySQL\u3001Nginx\u3001PHP\u3001Python 2\u3001Python 3\u3001Vim\u3001WordPress\u3002","title":"Offline Docs"},{"location":"environment/#_2","text":"\u7531\u4e8e\u4f17\u6240\u5468\u77e5\u7684\u539f\u56e0\uff0c","title":"\u79d1\u5b66\u4e0a\u7f51"},{"location":"misc/","text":"MISC \u00b6 \u56fe\u7247\u9690\u5199 \u00b6 Stegsolve Stegdetect amd64 deb Stegdetect \u7684\u4e3b\u8981\u9009\u9879\u5982\u4e0b\uff1a q \u2013 \u4ec5\u663e\u793a\u53ef\u80fd\u5305\u542b\u9690\u85cf\u5185\u5bb9\u7684\u56fe\u50cf n \u2013 \u542f\u7528\u68c0\u67e5 JPEG \u6587\u4ef6\u5934\u529f\u80fd\uff0c\u4ee5\u964d\u4f4e\u8bef\u62a5\u7387\u3002\u5982\u679c\u542f\u7528\uff0c\u6240\u6709\u5e26\u6709\u6279\u6ce8\u533a\u57df\u7684\u6587\u4ef6\u5c06\u88ab\u89c6\u4e3a\u6ca1\u6709\u88ab\u5d4c\u5165\u4fe1\u606f\u3002\u5982\u679c JPEG \u6587\u4ef6\u7684 JFIF \u6807\u8bc6\u7b26\u4e2d\u7684\u7248\u672c\u53f7\u4e0d\u662f 1.1\uff0c\u5219\u7981\u7528 OutGuess \u68c0\u6d4b\u3002 s \u2013 \u4fee\u6539\u68c0\u6d4b\u7b97\u6cd5\u7684\u654f\u611f\u5ea6\uff0c\u8be5\u503c\u7684\u9ed8\u8ba4\u503c\u4e3a 1\u3002\u68c0\u6d4b\u7ed3\u679c\u7684\u5339\u914d\u5ea6\u4e0e\u68c0\u6d4b\u7b97\u6cd5\u7684\u654f\u611f\u5ea6\u6210\u6b63\u6bd4\uff0c\u7b97\u6cd5\u654f\u611f\u5ea6\u7684\u503c\u8d8a\u5927\uff0c\u68c0\u6d4b\u51fa\u7684\u53ef\u7591\u6587\u4ef6\u5305\u542b\u654f\u611f\u4fe1\u606f\u7684\u53ef\u80fd\u6027\u8d8a\u5927\u3002 d \u2013 \u6253\u5370\u5e26\u884c\u53f7\u7684\u8c03\u8bd5\u4fe1\u606f\u3002 t \u2013 \u8bbe\u7f6e\u8981\u68c0\u6d4b\u54ea\u4e9b\u9690\u5199\u5de5\u5177\uff08\u9ed8\u8ba4\u68c0\u6d4b jopi\uff09\uff0c\u53ef\u8bbe\u7f6e\u7684\u9009\u9879\u5982\u4e0b\uff1a j \u2013 \u68c0\u6d4b\u56fe\u50cf\u4e2d\u7684\u4fe1\u606f\u662f\u5426\u662f\u7528 jsteg \u5d4c\u5165\u7684\u3002 o \u2013 \u68c0\u6d4b\u56fe\u50cf\u4e2d\u7684\u4fe1\u606f\u662f\u5426\u662f\u7528 outguess \u5d4c\u5165\u7684\u3002 p \u2013 \u68c0\u6d4b\u56fe\u50cf\u4e2d\u7684\u4fe1\u606f\u662f\u5426\u662f\u7528 jphide \u5d4c\u5165\u7684\u3002 i \u2013 \u68c0\u6d4b\u56fe\u50cf\u4e2d\u7684\u4fe1\u606f\u662f\u5426\u662f\u7528 invisible secrets \u5d4c\u5165\u7684\u3002 Steghide 0.5.1 win32 Outguess amd64 deb PNGCheck 2.3.0 win32 JPHS win32 OurSecret \u538b\u7f29\u5305 \u00b6 Ziperello zip \u538b\u7f29\u5305\u5bc6\u7801\u7206\u7834\u3002 Advanced Rar Password Recovery Advanced Zip Password Recovery \u65e0\u7ebf\u5bc6\u7801 \u00b6 Elcomsoft Wireless Security Auditor \u7f16\u8f91\u5668 \u00b6 010 Editor Windows x64 NTFS \u6587\u4ef6\u6d41 \u00b6 Alternate Stream View \u97f3\u9891\u9690\u5199 \u00b6 Audacity \u5728\u7ebf\u62e8\u53f7\u97f3\u8bc6\u522b \u53d6\u8bc1 \u00b6 Elcomsoft Forensic Disk Decryptor \u7834\u89e3\u5de5\u5177 \u6761\u5f62\u7801\u3001\u4e8c\u7ef4\u7801 \u00b6 \u6761\u5f62\u7801\u3001\u4e8c\u7ef4\u7801\u5728\u7ebf\u8bc6\u522b GIF \u00b6 GIF \u5728\u7ebf\u5206\u89e3 pyc \u00b6 Stegosaurus Stegosaurus \u662f\u4e00\u6b3e\u9690\u5199\u5de5\u5177\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u5728 Python \u5b57\u8282\u7801\u6587\u4ef6( pyc \u6216 pyo )\u4e2d\u5d4c\u5165\u4efb\u610f Payload \u3002\u7531\u4e8e\u7f16\u7801\u5bc6\u5ea6\u8f83\u4f4e\uff0c\u56e0\u6b64\u6211\u4eec\u5d4c\u5165 Payload \u7684\u8fc7\u7a0b\u65e2\u4e0d\u4f1a\u6539\u53d8\u6e90\u4ee3\u7801\u7684\u8fd0\u884c\u884c\u4e3a\uff0c\u4e5f\u4e0d\u4f1a\u6539\u53d8\u6e90\u6587\u4ef6\u7684\u6587\u4ef6\u5927\u5c0f\u3002 Payload \u4ee3\u7801\u4f1a\u88ab\u5206\u6563\u5d4c\u5165\u5230\u5b57\u8282\u7801\u4e4b\u4e2d\uff0c\u6240\u4ee5\u7c7b\u4f3c strings \u8fd9\u6837\u7684\u4ee3\u7801\u5de5\u5177\u65e0\u6cd5\u67e5\u627e\u5230\u5b9e\u9645\u7684 Payload \u3002 Python \u7684 dis \u6a21\u5757\u4f1a\u8fd4\u56de\u6e90\u6587\u4ef6\u7684\u5b57\u8282\u7801\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528 Stegosaurus \u6765\u5d4c\u5165 Payload \u4e86\u3002 Tips: Stegosaurus \u4ec5\u652f\u6301 Python3.6 \u53ca\u5176\u4ee5\u4e0b\u7248\u672c Stegosaurus \u7684\u57fa\u672c\u7528\u6cd5\u5982\u4e0b\uff1a $ python3 -m stegosaurus -h usage: stegosaurus.py [ -h ] [ -p PAYLOAD ] [ -r ] [ -s ] [ -v ] [ -x ] carrier positional arguments: carrier Carrier py, pyc or pyo file optional arguments: -h, --help show this help message and exit -p PAYLOAD, --payload PAYLOAD Embed payload in carrier file -r, --report Report max available payload size carrier supports -s, --side-by-side Do not overwrite carrier file, install side by side instead. -v, --verbose Increase verbosity once per use -x, --extract Extract payload from carrier file","title":"\u57fa\u672c\u5de5\u5177"},{"location":"misc/#misc","text":"","title":"MISC"},{"location":"misc/#_1","text":"Stegsolve Stegdetect amd64 deb Stegdetect \u7684\u4e3b\u8981\u9009\u9879\u5982\u4e0b\uff1a q \u2013 \u4ec5\u663e\u793a\u53ef\u80fd\u5305\u542b\u9690\u85cf\u5185\u5bb9\u7684\u56fe\u50cf n \u2013 \u542f\u7528\u68c0\u67e5 JPEG \u6587\u4ef6\u5934\u529f\u80fd\uff0c\u4ee5\u964d\u4f4e\u8bef\u62a5\u7387\u3002\u5982\u679c\u542f\u7528\uff0c\u6240\u6709\u5e26\u6709\u6279\u6ce8\u533a\u57df\u7684\u6587\u4ef6\u5c06\u88ab\u89c6\u4e3a\u6ca1\u6709\u88ab\u5d4c\u5165\u4fe1\u606f\u3002\u5982\u679c JPEG \u6587\u4ef6\u7684 JFIF \u6807\u8bc6\u7b26\u4e2d\u7684\u7248\u672c\u53f7\u4e0d\u662f 1.1\uff0c\u5219\u7981\u7528 OutGuess \u68c0\u6d4b\u3002 s \u2013 \u4fee\u6539\u68c0\u6d4b\u7b97\u6cd5\u7684\u654f\u611f\u5ea6\uff0c\u8be5\u503c\u7684\u9ed8\u8ba4\u503c\u4e3a 1\u3002\u68c0\u6d4b\u7ed3\u679c\u7684\u5339\u914d\u5ea6\u4e0e\u68c0\u6d4b\u7b97\u6cd5\u7684\u654f\u611f\u5ea6\u6210\u6b63\u6bd4\uff0c\u7b97\u6cd5\u654f\u611f\u5ea6\u7684\u503c\u8d8a\u5927\uff0c\u68c0\u6d4b\u51fa\u7684\u53ef\u7591\u6587\u4ef6\u5305\u542b\u654f\u611f\u4fe1\u606f\u7684\u53ef\u80fd\u6027\u8d8a\u5927\u3002 d \u2013 \u6253\u5370\u5e26\u884c\u53f7\u7684\u8c03\u8bd5\u4fe1\u606f\u3002 t \u2013 \u8bbe\u7f6e\u8981\u68c0\u6d4b\u54ea\u4e9b\u9690\u5199\u5de5\u5177\uff08\u9ed8\u8ba4\u68c0\u6d4b jopi\uff09\uff0c\u53ef\u8bbe\u7f6e\u7684\u9009\u9879\u5982\u4e0b\uff1a j \u2013 \u68c0\u6d4b\u56fe\u50cf\u4e2d\u7684\u4fe1\u606f\u662f\u5426\u662f\u7528 jsteg \u5d4c\u5165\u7684\u3002 o \u2013 \u68c0\u6d4b\u56fe\u50cf\u4e2d\u7684\u4fe1\u606f\u662f\u5426\u662f\u7528 outguess \u5d4c\u5165\u7684\u3002 p \u2013 \u68c0\u6d4b\u56fe\u50cf\u4e2d\u7684\u4fe1\u606f\u662f\u5426\u662f\u7528 jphide \u5d4c\u5165\u7684\u3002 i \u2013 \u68c0\u6d4b\u56fe\u50cf\u4e2d\u7684\u4fe1\u606f\u662f\u5426\u662f\u7528 invisible secrets \u5d4c\u5165\u7684\u3002 Steghide 0.5.1 win32 Outguess amd64 deb PNGCheck 2.3.0 win32 JPHS win32 OurSecret","title":"\u56fe\u7247\u9690\u5199"},{"location":"misc/#_2","text":"Ziperello zip \u538b\u7f29\u5305\u5bc6\u7801\u7206\u7834\u3002 Advanced Rar Password Recovery Advanced Zip Password Recovery","title":"\u538b\u7f29\u5305"},{"location":"misc/#_3","text":"Elcomsoft Wireless Security Auditor","title":"\u65e0\u7ebf\u5bc6\u7801"},{"location":"misc/#_4","text":"010 Editor Windows x64","title":"\u7f16\u8f91\u5668"},{"location":"misc/#ntfs","text":"Alternate Stream View","title":"NTFS \u6587\u4ef6\u6d41"},{"location":"misc/#_5","text":"Audacity \u5728\u7ebf\u62e8\u53f7\u97f3\u8bc6\u522b","title":"\u97f3\u9891\u9690\u5199"},{"location":"misc/#_6","text":"Elcomsoft Forensic Disk Decryptor \u7834\u89e3\u5de5\u5177","title":"\u53d6\u8bc1"},{"location":"misc/#_7","text":"\u6761\u5f62\u7801\u3001\u4e8c\u7ef4\u7801\u5728\u7ebf\u8bc6\u522b","title":"\u6761\u5f62\u7801\u3001\u4e8c\u7ef4\u7801"},{"location":"misc/#gif","text":"GIF \u5728\u7ebf\u5206\u89e3","title":"GIF"},{"location":"misc/#pyc","text":"Stegosaurus Stegosaurus \u662f\u4e00\u6b3e\u9690\u5199\u5de5\u5177\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u5728 Python \u5b57\u8282\u7801\u6587\u4ef6( pyc \u6216 pyo )\u4e2d\u5d4c\u5165\u4efb\u610f Payload \u3002\u7531\u4e8e\u7f16\u7801\u5bc6\u5ea6\u8f83\u4f4e\uff0c\u56e0\u6b64\u6211\u4eec\u5d4c\u5165 Payload \u7684\u8fc7\u7a0b\u65e2\u4e0d\u4f1a\u6539\u53d8\u6e90\u4ee3\u7801\u7684\u8fd0\u884c\u884c\u4e3a\uff0c\u4e5f\u4e0d\u4f1a\u6539\u53d8\u6e90\u6587\u4ef6\u7684\u6587\u4ef6\u5927\u5c0f\u3002 Payload \u4ee3\u7801\u4f1a\u88ab\u5206\u6563\u5d4c\u5165\u5230\u5b57\u8282\u7801\u4e4b\u4e2d\uff0c\u6240\u4ee5\u7c7b\u4f3c strings \u8fd9\u6837\u7684\u4ee3\u7801\u5de5\u5177\u65e0\u6cd5\u67e5\u627e\u5230\u5b9e\u9645\u7684 Payload \u3002 Python \u7684 dis \u6a21\u5757\u4f1a\u8fd4\u56de\u6e90\u6587\u4ef6\u7684\u5b57\u8282\u7801\uff0c\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528 Stegosaurus \u6765\u5d4c\u5165 Payload \u4e86\u3002 Tips: Stegosaurus \u4ec5\u652f\u6301 Python3.6 \u53ca\u5176\u4ee5\u4e0b\u7248\u672c Stegosaurus \u7684\u57fa\u672c\u7528\u6cd5\u5982\u4e0b\uff1a $ python3 -m stegosaurus -h usage: stegosaurus.py [ -h ] [ -p PAYLOAD ] [ -r ] [ -s ] [ -v ] [ -x ] carrier positional arguments: carrier Carrier py, pyc or pyo file optional arguments: -h, --help show this help message and exit -p PAYLOAD, --payload PAYLOAD Embed payload in carrier file -r, --report Report max available payload size carrier supports -s, --side-by-side Do not overwrite carrier file, install side by side instead. -v, --verbose Increase verbosity once per use -x, --extract Extract payload from carrier file","title":"pyc"},{"location":"papers/","text":"Papers \u00b6 \u6f14\u8bb2 PPT \u00b6 KCon 2017 PPT \u8865\u5929\u6c99\u9f99\u5357\u4eac\u7ad9\u2014\u2014 Java \u4ee3\u7801\u5ba1\u8ba1 2017 \u7b2c\u4e09\u5c4aPHP\u5168\u7403\u5f00\u53d1\u8005\u5927\u4f1a 2017 \u5148\u77e5\u767d\u5e3d\u5927\u4f1a\u8bae\u9898 PPT CTF \u6bd4\u8d5b\u603b\u662f\u8f93\uff1f\u4f60\u8fd8\u5dee\u70b9 Tricks\uff01 Build Your SSRF EXP Autowork By \u732a\u732a\u4fa0 \u6211\u7684\u767d\u5e3d\u5b66\u4e60\u8def\u7ebf 2017 \u8865\u5929\u6c99\u9f99\u6210\u90fd\u7ad9 - \u6e17\u900f\u6d4b\u8bd5\u4e2d\u7684\u90a3\u70b9\u5c0f\u4e8b By l3m0n 2016 \u8865\u5929\u767d\u5e3d\u6c99\u9f99\u6210\u90fd\u7ad9 - PWN \u65b0\u53f8\u673a\u5982\u4f55\u5feb\u901f\u4e0a\u8def By muhe \u7b2c\u4e94\u5c4a\u4e2d\u56fd\u7f51\u7edc\u5b89\u5168\u5927\u4f1a - \u6d4f\u89c8\u5668\u5730\u5740\u680f\u4e4b\u56f0 Introduction to the Pin Instrumentation Tool \u4e66\u7c4d \u00b6 SQL \u6ce8\u5165\u653b\u51fb\u4e0e\u9632\u5fa1 Metasploit \u6e17\u900f\u6d4b\u8bd5\u9b54\u9b3c\u8bad\u7ec3\u8425 PHP \u4ee3\u7801\u5ba1\u8ba1\u5165\u5751\u5b9e\u8df5 WireShark \u6570\u636e\u5305\u5206\u6790\u5b9e\u6218\uff08\u7b2c\u4e8c\u7248\uff09 \u9ed1\u5ba2\u5927\u66dd\u5149\u7b2c\u4e03\u7248","title":"Papers \u4f1a\u8bae"},{"location":"papers/#papers","text":"","title":"Papers"},{"location":"papers/#ppt","text":"KCon 2017 PPT \u8865\u5929\u6c99\u9f99\u5357\u4eac\u7ad9\u2014\u2014 Java \u4ee3\u7801\u5ba1\u8ba1 2017 \u7b2c\u4e09\u5c4aPHP\u5168\u7403\u5f00\u53d1\u8005\u5927\u4f1a 2017 \u5148\u77e5\u767d\u5e3d\u5927\u4f1a\u8bae\u9898 PPT CTF \u6bd4\u8d5b\u603b\u662f\u8f93\uff1f\u4f60\u8fd8\u5dee\u70b9 Tricks\uff01 Build Your SSRF EXP Autowork By \u732a\u732a\u4fa0 \u6211\u7684\u767d\u5e3d\u5b66\u4e60\u8def\u7ebf 2017 \u8865\u5929\u6c99\u9f99\u6210\u90fd\u7ad9 - \u6e17\u900f\u6d4b\u8bd5\u4e2d\u7684\u90a3\u70b9\u5c0f\u4e8b By l3m0n 2016 \u8865\u5929\u767d\u5e3d\u6c99\u9f99\u6210\u90fd\u7ad9 - PWN \u65b0\u53f8\u673a\u5982\u4f55\u5feb\u901f\u4e0a\u8def By muhe \u7b2c\u4e94\u5c4a\u4e2d\u56fd\u7f51\u7edc\u5b89\u5168\u5927\u4f1a - \u6d4f\u89c8\u5668\u5730\u5740\u680f\u4e4b\u56f0 Introduction to the Pin Instrumentation Tool","title":"\u6f14\u8bb2 PPT"},{"location":"papers/#_1","text":"SQL \u6ce8\u5165\u653b\u51fb\u4e0e\u9632\u5fa1 Metasploit \u6e17\u900f\u6d4b\u8bd5\u9b54\u9b3c\u8bad\u7ec3\u8425 PHP \u4ee3\u7801\u5ba1\u8ba1\u5165\u5751\u5b9e\u8df5 WireShark \u6570\u636e\u5305\u5206\u6790\u5b9e\u6218\uff08\u7b2c\u4e8c\u7248\uff09 \u9ed1\u5ba2\u5927\u66dd\u5149\u7b2c\u4e03\u7248","title":"\u4e66\u7c4d"},{"location":"pwn/","text":"PWN \u00b6 \u53cd\u6c47\u7f16 \u00b6 IDA Pro 6.8 Green \u8c03\u8bd5 \u00b6 peda Installation git clone https://github.com/longld/peda.git ~/peda echo \"source ~/peda/peda.py\" >> ~/.gdbinit echo \"DONE! debug your program with gdb and enjoy\" \u622a\u81f3 2016 \u5e74 12 \u6708 27 \u65e5 master \u5206\u652f\u6253\u5305 Patch \u00b6 Fentanyl IDA Python \u811a\u672c\uff0c\u7528\u4e8e\u5feb\u901f patch\u3002 \u622a\u81f3 2016 \u5e74 12 \u6708 27 \u65e5 master \u5206\u652f\u6253\u5305 Usage Loading Fentanyl.py Alt+F7 or File > Script File to load scripts Browse to main.py and open it That's it! Key Bindings Some of these keybindings can be accessed by right-clicking on the screen in graph view. Alt-N Convert instructions to nops Alt-X Nop all xrefs to this function Alt-J Invert conditional jump Alt-P Patch instruction Alt-Z Undo modification (Won't always work. Should still be careful editing.) Alt-Y Redo modification (Won't always work. Should still be careful editing.) Alt-S Save file Alt-C Find Code Caves Ctrl-Alt-F Make jump unconditional Ctrl-Alt-N Neuter the binary (remove calls to fork, setuid, setgid, getpwnam, setgroups, and chdir)","title":"Pwn \u4e8c\u8fdb\u5236\u6f0f\u6d1e\u6316\u6398"},{"location":"pwn/#pwn","text":"","title":"PWN"},{"location":"pwn/#_1","text":"IDA Pro 6.8 Green","title":"\u53cd\u6c47\u7f16"},{"location":"pwn/#_2","text":"peda Installation git clone https://github.com/longld/peda.git ~/peda echo \"source ~/peda/peda.py\" >> ~/.gdbinit echo \"DONE! debug your program with gdb and enjoy\" \u622a\u81f3 2016 \u5e74 12 \u6708 27 \u65e5 master \u5206\u652f\u6253\u5305","title":"\u8c03\u8bd5"},{"location":"pwn/#patch","text":"Fentanyl IDA Python \u811a\u672c\uff0c\u7528\u4e8e\u5feb\u901f patch\u3002 \u622a\u81f3 2016 \u5e74 12 \u6708 27 \u65e5 master \u5206\u652f\u6253\u5305 Usage Loading Fentanyl.py Alt+F7 or File > Script File to load scripts Browse to main.py and open it That's it! Key Bindings Some of these keybindings can be accessed by right-clicking on the screen in graph view. Alt-N Convert instructions to nops Alt-X Nop all xrefs to this function Alt-J Invert conditional jump Alt-P Patch instruction Alt-Z Undo modification (Won't always work. Should still be careful editing.) Alt-Y Redo modification (Won't always work. Should still be careful editing.) Alt-S Save file Alt-C Find Code Caves Ctrl-Alt-F Make jump unconditional Ctrl-Alt-N Neuter the binary (remove calls to fork, setuid, setgid, getpwnam, setgroups, and chdir)","title":"Patch"},{"location":"reverse/","text":"Reverse \u00b6 \u53cd\u6c47\u7f16 \u00b6 IDA Pro 6.8 Green dnSpy ILSpy IDA Pro 7.0 Green \u8c03\u8bd5 \u00b6 \u543e\u7231\u7834\u89e3\u4e13\u7528 Ollydbg \u8131\u58f3 \u00b6 UPX Unpacker Python \u00b6 unpy2exe Android \u00b6 AndroidResEdit JD - GUI Android Killer JEB - 2.2.7 \u52a8\u6001\u63d2\u6869 \u00b6 intel pin","title":"Reverse \u9006\u5411\u5de5\u7a0b"},{"location":"reverse/#reverse","text":"","title":"Reverse"},{"location":"reverse/#_1","text":"IDA Pro 6.8 Green dnSpy ILSpy IDA Pro 7.0 Green","title":"\u53cd\u6c47\u7f16"},{"location":"reverse/#_2","text":"\u543e\u7231\u7834\u89e3\u4e13\u7528 Ollydbg","title":"\u8c03\u8bd5"},{"location":"reverse/#_3","text":"UPX Unpacker","title":"\u8131\u58f3"},{"location":"reverse/#python","text":"unpy2exe","title":"Python"},{"location":"reverse/#android","text":"AndroidResEdit JD - GUI Android Killer JEB - 2.2.7","title":"Android"},{"location":"reverse/#_4","text":"intel pin","title":"\u52a8\u6001\u63d2\u6869"},{"location":"unfinished/","text":"unfinished","title":"Frida"},{"location":"binary-core-tools/debugger/ida/","text":"ida","title":"IDA"},{"location":"binary-core-tools/file_structure/010editor/","text":"010 editor","title":"010 Editor"},{"location":"binary-core-tools/instrumentation/intel_pin/","text":"intel pin \u00b6 \u4ec0\u4e48\u662f pin \u00b6 pin \u662f intel \u5f00\u53d1\u7684\u4e00\u6b3e\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u7684\u63d2\u6869\u5206\u6790\u5de5\u5177\uff0c\u652f\u6301 x86/x64 & windows/linux/mac\uff0c\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684 API \u4f9b\u4f7f\u7528\u8005\u7528 C/C++ \u7f16\u5199 pintool \u5206\u6790\u7a0b\u5e8f \u4ec0\u4e48\u662f\u63d2\u6869(instrument) \u00b6 \u901a\u4fd7\u7684\u6765\u8bf4\uff0c\u63d2\u6869\u5c31\u662f\u5728\u5df2\u6709\u7684\u6e90\u4ee3\u7801/\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u4e2d\u63d2\u5165\u67d0\u4e9b\u4ee3\u7801\u4ee5\u4fbf\u4e8e\u81ea\u5df1\u5206\u6790\uff0c\u6bd4\u5982\u5728\u8c03\u8bd5\u65f6\u4f7f\u7528 printf \u6253\u5370\u53d8\u91cf\u503c\u5c31\u5c5e\u4e8e\u5728\u6e90\u4ee3\u7801\u7ea7\u522b\u7684\u63d2\u6869\u3002\u800cintel pin\u5c31\u662f\u5728\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u7ea7\u522b\uff08\u6ca1\u6709\u6e90\u4ee3\u7801\uff09\u63d2\u6869\u7684\u4e00\u6b3e\u5de5\u5177 pin \u548c pintool \u00b6 pin \u7684\u5b89\u88c5\uff0cpintool \u7684\u7f16\u8bd1 \u00b6 pin \u7684\u5b89\u88c5\u5f88\u7b80\u5355\uff0c\u8fd9\u91cc\u4ee5 64 \u4f4d\u7684 Linux \u4e3a\u4f8b\u6765\u8bf4\u660e\uff0c\u4ece \u5b98\u7f51 \u4e0a\u4e0b\u8f7d pin \u7ec4\u4ef6\u540e\uff0c\u89e3\u538b\u5373\u53ef\uff0c\u5728\u89e3\u538b\u540e\u7684\u6587\u4ef6\u5939\u5185\u6709\u7f16\u8bd1\u597d\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f pin pin-3.6-gcc-linux ls doc extlicense extras ia32 intel64 LICENSE pin README redist.txt source pin-3.6-gcc-linux file pin pin: ELF 32 -bit LSB executable, Intel 80386 , version 1 ( SYSV ) , statically linked, BuildID [ sha1 ]= 7beaa83f9142955a6e933bf29d4a8aa1269298bc, stripped pin-3.6-gcc-linux ./pin E: Missing application name Pin: pin-3.6-97554-31f0a167d Copyright ( c ) 2003 -2017, Intel Corporation. All rights reserved. Usage: pin [ OPTION ] [ -t <tool> [ <toolargs> ]] -- < command line> Use -help for a description of options \u5728 source/tools/ManualExamples \u4e2d\u6709\u4e00\u4e9b\u73b0\u6210\u7684 pintool \u53ef\u4ee5\u4f7f\u7528\uff0c\u57fa\u672c\u6db5\u76d6\u4e86\u5404\u4e2a\u6a21\u5757\u7684\u7528\u6cd5\uff0c\u8fd9\u91cc\u4ee5 inscount0 \u8fd9\u4e2a pintool \u4e3a\u4f8b\u4ecb\u7ecd pin \u7684\u4f7f\u7528\u65b9\u6cd5 pin-3.6-gcc-linux cd source/tools/ManualExamples ManualExamples file inscount0.cpp inscount0.cpp: C source, ASCII text ManualExamples make obj-intel64/inscount0.so TARGET = intel64 g++ -Wall -Werror -Wno-unknown-pragmas -D__PIN__ = 1 -DPIN_CRT = 1 -fno-stack-protector -fno-exceptions -funwind-tables -fasynchronous-unwind-tables -fno-rtti -DTARGET_IA32E -DHOST_IA32E -fPIC -DTARGET_LINUX -fabi-version = 2 -I../../../source/include/pin -I../../../source/include/pin/gen -isystem /home/m4x/pin-3.6-gcc-linux/extras/stlport/include -isystem /home/m4x/pin-3.6-gcc-linux/extras/libstdc++/include -isystem /home/m4x/pin-3.6-gcc-linux/extras/crt/include -isystem /home/m4x/pin-3.6-gcc-linux/extras/crt/include/arch-x86_64 -isystem /home/m4x/pin-3.6-gcc-linux/extras/crt/include/kernel/uapi -isystem /home/m4x/pin-3.6-gcc-linux/extras/crt/include/kernel/uapi/asm-x86 -I../../../extras/components/include -I../../../extras/xed-intel64/include/xed -I../../../source/tools/InstLib -O3 -fomit-frame-pointer -fno-strict-aliasing -c -o obj-intel64/inscount0.o inscount0.cpp g++ -shared -Wl,--hash-style = sysv ../../../intel64/runtime/pincrt/crtbeginS.o -Wl,-Bsymbolic -Wl,--version-script = ../../../source/include/pin/pintool.ver -fabi-version = 2 -o obj-intel64/inscount0.so obj-intel64/inscount0.o -L../../../intel64/runtime/pincrt -L../../../intel64/lib -L../../../intel64/lib-ext -L../../../extras/xed-intel64/lib -lpin -lxed ../../../intel64/runtime/pincrt/crtendS.o -lpin3dwarf -ldl-dynamic -nostdlib -lstlport-dynamic -lm-dynamic -lc-dynamic -lunwind-dynamic ManualExamples file obj-intel64/inscount0.so obj-intel64/inscount0.so: ELF 64 -bit LSB shared object, x86-64, version 1 ( SYSV ) , dynamically linked, BuildID [ sha1 ]= 3baa29dd54235acaab02edc94bf9ac377dd7b0e5, not stripped \u6b64\u65f6\u5728 obj-intel64 \u4e0b\u7f16\u8bd1\u751f\u6210\u4e86 inscount0.so\uff0c\u8fd9\u4e2a so \u5373\u4e3a\u4e00\u79cd pintool\uff0c\u529f\u80fd\u4e3a\u8bb0\u5f55\u7a0b\u5e8f\u6267\u884c\u7684\u6307\u4ee4\u7684\u6761\u6570\uff1b \u5224\u65ad pintool \u7684\u529f\u80fd\u53ef\u4ee5\u9605\u8bfb pintool \u6e90\u4ee3\u7801\u6216\u8005\u4f7f\u7528\u4e0b\u6761\u6307\u4ee4 $ pin -t your_pintool -h -- your_application \u7c7b\u4f3c\u7684\uff0c\u8981\u7f16\u8bd1 32 \u4f4d\u7684 pintool \u53ef\u4ee5\u4f7f\u7528 make obj-ia32/inscount0.so \u7f16\u8bd1 ManualExamples \u4e2d\u7684\u6240\u6709 pintool \u53ef\u4ee5\u4f7f\u7528 make all TAEGET = intel64 make all TAEGET = ia32 pin \u7684\u4f7f\u7528 \u00b6 pin \u7684\u57fa\u672c\u547d\u4ee4\u683c\u5f0f\u5982\u4e0b pin -t your_pintool -- your_binary <arg> \u4ee5\u521a\u521a\u7f16\u8bd1\u7684 inscount0 \u8fd9\u4e2a pintool \u4e3a\u4f8b ManualExamples ../../../pin -t ./obj-intel64/inscount0.so -- /bin/ls -a . inscount2.cpp obj-intel64 .. inscount.out pinatrace.cpp buffer_linux.cpp inscount_tls.cpp pin.log buffer_windows.cpp invocation.cpp proccount.cpp countreps.cpp isampling.cpp replacesigprobed.cpp detach.cpp itrace.cpp safecopy.cpp divide_by_zero_unix.c little_malloc.c stack-debugger.cpp divide_by_zero_win.c logtrace.cpp stack-debugger-tutorial.sln emudiv.cpp makefile stack-debugger-tutorial.vcxproj fibonacci.cpp makefile.rules stack-debugger-tutorial.vcxproj.filters follow_child_app1.cpp malloc.cpp statica.cpp follow_child_app2.cpp malloc_mt.cpp staticcount.cpp follow_child_tool.cpp malloctrace.cpp strace.cpp fork_app.cpp myInscount0.cpp test fork_jit_tool.cpp myInscount1.cpp test.c imageload.cpp myMalloctrace.cpp test-packed inscount0.cpp nonstatica.cpp tracer.cpp inscount1.cpp obj-ia32 w_malloctrace.cpp ManualExamples cat inscount.out Count 813449 inscount \u9ed8\u8ba4\u7ed3\u679c\u4fdd\u5b58\u5728 inscount.out \u8fd9\u4e2a\u6587\u4ef6\u4e2d\uff0c\u5728\u4e0a\u4f8b\u4e2d\uff0c\u5373\u6b64\u65f6 ls -a \u8fd9\u6761\u547d\u4ee4\u5171\u6267\u884c\u4e86 813449 \u6761\u6307\u4ee4 pintool \u7684\u5206\u6790 \u00b6 \u540c\u6837\u4ee5 inscount0 \u4e3a\u4f8b\u5206\u6790\uff0c\u67e5\u770b inscount0.cpp \u7684\u5185\u5bb9 #include <iostream> #include <fstream> #include \"pin.H\" ofstream OutFile ; // The running count of instructions is kept here // make it static to help the compiler optimize docount static UINT64 icount = 0 ; // This function is called before every instruction is executed VOID docount () { icount ++ ; } // Pin calls this function every time a new instruction is encountered VOID Instruction ( INS ins , VOID * v ) { // Insert a call to docount before every instruction, no arguments are passed INS_InsertCall ( ins , IPOINT_BEFORE , ( AFUNPTR ) docount , IARG_END ); } KNOB < string > KnobOutputFile ( KNOB_MODE_WRITEONCE , \"pintool\" , \"o\" , \"inscount.out\" , \"specify output file name\" ); // This function is called when the application exits VOID Fini ( INT32 code , VOID * v ) { // Write to a file since cout and cerr maybe closed by the application OutFile . setf ( ios :: showbase ); OutFile << \"Count \" << icount << endl ; OutFile . close (); } /* ===================================================================== */ /* Print Help Message */ /* ===================================================================== */ INT32 Usage () { cerr << \"This tool counts the number of dynamic instructions executed\" << endl ; cerr << endl << KNOB_BASE :: StringKnobSummary () << endl ; return - 1 ; } /* ===================================================================== */ /* Main */ /* ===================================================================== */ /* argc, argv are the entire command line: pin -t <toolname> -- ... */ /* ===================================================================== */ int main ( int argc , char * argv []) { // Initialize pin if ( PIN_Init ( argc , argv )) return Usage (); OutFile . open ( KnobOutputFile . Value (). c_str ()); // Register Instruction to be called to instrument instructions INS_AddInstrumentFunction ( Instruction , 0 ); // Register Fini to be called when the application exits PIN_AddFiniFunction ( Fini , 0 ); // Start the program, never returns PIN_StartProgram (); return 0 ; } \u4ece main \u5f00\u59cb\uff0c\u9996\u5148\u8c03\u7528\u4e86 PIN_init\uff0853 \u884c\uff09\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u7136\u540e\u4f7f\u7528 INS_AddInstrumenFunction \u6ce8\u518c\u4e86\u4e00\u4e2a\u63d2\u6869\u51fd\u6570(58\u884c)\uff0c\u6839\u636e intel pin \u7684 \u7528\u6237\u624b\u518c PIN_CALLBACK LEVEL_PINCLIENT :: INS_AddInstrumentFunction ( INS_INSTRUMENT_CALLBACK fun , VOID * val ) Add a function used to instrument at instruction granularity Parameters : fun Instrumentation function for instructions val passed as the second argument to the instrumentation function Returns : PIN_CALLBACK A handle to a callback that can be used to further modify this callback ' s properties Note : The pin client lock is obtained during the call of this API . Availability : Mode : JIT O / S : Linux , Windows & OS X * CPU : All \u5728\u8fd9\u91cc\u8be5\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5728\u6307\u4ee4\u7c92\u5ea6\u63d2\u5165 Instruction \u51fd\u6570\uff0c\u5373\u5728\u6bcf\u6761\u6307\u4ee4\u6267\u884c\u524d\uff0c\u90fd\u4f1a\u8fdb\u5165 Instruction \u8fd9\u4e2a\u51fd\u6570\u4e2d\uff0c\u5176\u7b2c2\u4e2a\u53c2\u6570\u4e3a\u4e00\u4e2a\u989d\u5916\u4f20\u9012\u7ed9 Instruction \u7684\u53c2\u6570\uff0c\u5373\u5bf9\u5e94 VOID *v \u8fd9\u4e2a\u53c2\u6570\uff0c\u8fd9\u91cc\u6ca1\u6709\u4f7f\u7528\u3002\u800c Instruction \u63a5\u53d7\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a INS \u7ed3\u6784\uff0c\u7528\u6765\u8868\u793a\u4e00\u6761\u6307\u4ee4 \u800c\u6211\u4eec\u518d\u770b Instruction \u8fd9\u4e2a\u51fd\u6570 VOID Instruction ( INS ins , VOID * v ) { // Insert a call to docount before every instruction, no arguments are passed INS_InsertCall ( ins , IPOINT_BEFORE , ( AFUNPTR ) docount , IARG_END ); } \u5728 Instruction \u51fd\u6570\u5185\u90e8\u53c8\u4f7f\u7528 INS_InsertCall \u6ce8\u518c\u4e86\u4e00\u4e2a\u51fd\u6570 docount\uff0c\u5373\u5728\u6bcf\u6761\u6307\u4ee4\u524d\u5b9e\u9645\u63d2\u5165\u4e86 docount \u8fd9\u4e2a\u51fd\u6570\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f INS_InsertCall \u8bd5\u4e00\u4e2a\u4fbf\u9910\u51fd\u6570\uff0c\u524d\u4e09\u4e2a\u53c2\u6570\u5206\u522b\u4e3a\u6307\u4ee4(ins)\uff0c\u63d2\u5165\u7684\u5b9e\u9645(IPOINT_BEFORE\uff0c\u8868\u793a\u5728\u6307\u4ee4\u8fd0\u884c\u4e4b\u524d\u63d2\u5165 docount \u51fd\u6570)\uff0c\u51fd\u6570\u6307\u9488(docount\uff0c\u8f6c\u5316\u4e3a\u4e86 AFUNPTR \u7c7b\u578b)\uff0c\u4e4b\u540e\u7684\u53c2\u6570\u4e3a\u4f20\u9012\u7ed9 docount \u51fd\u6570\u7684\u53c2\u6570\uff0c\u4ee5 IARG_END \u7ed3\u5c3e \u800c docount \u51fd\u6570\uff0812 \u884c\uff09\u7684\u4f5c\u7528\u5c31\u5f88\u660e\u663e\u4e86\uff0c\u6bcf\u6b21\u5c06\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u52a0 1\uff0c\u56e0\u6b64\u6b64\u65f6 /bin/ls -a \u8fd0\u884c\u7684\u6a21\u5f0f\u5982\u4e0b: ... icount++; sub $0xff, %edx icount++; cmp %esi, %edx icount++; jle <L1> icount++; mov $0x1, %edi icount++; add $0x10, %eax ... \u6240\u4ee5 inscount0 \u7684\u7528\u9014\u5c31\u5f88\u660e\u663e\u4e86\uff0c\u6bcf\u6761\u6307\u4ee4\u524d\u90fd\u8c03\u7528 docount \u51fd\u6570\u5c06\u5168\u5c40\u53d8\u91cf icount \u81ea\u589e\uff0c\u6700\u540e\u901a\u8fc7PIN_AddFiniFunction \u51fd\u6570\u6ce8\u518c\u7684 Fini \u51fd\u6570(25\u884c)\u5c06\u7ed3\u679c\u5199\u5230\u4e00\u4e2a\u6587\u4ef6\u4e2d\u3002 \u5f53\u8fd9\u4e9b\u51fd\u6570\u90fd\u5b9a\u4e49\u5b8c\u540e\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528 PIN_StartProgram \u6765\u542f\u52a8\u7a0b\u5e8f\u4e86 \u8fd9\u91cc\u5206\u6790\u4e86\u4e00\u4e2a\u6700\u7b80\u5355\u7684 pintool \u4f8b\u5b50\uff0c\u66f4\u591a pintool \u4f8b\u5b50\u7684\u5206\u6790\u548c\u5176\u4ed6\u51fd\u6570\u7684\u4f7f\u7528\u53ef\u4ee5\u53c2\u8003 BrieflyX \u7684 \u535a\u5ba2 pin in CTF \u00b6 \u56e0\u4e3a\u52a8\u6001\u63d2\u6869\u6709\u4e0d\u91cd\u65b0\u7f16\u8bd1\u5373\u53ef\u6536\u96c6\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u67d0\u4e9b\u4fe1\u606f\u7684\u7279\u6027\uff0c\u56e0\u6b64\u7528 pin \u6c42\u89e3 \u4e00\u90e8\u5206 CTF challenges \u4f1a\u5f02\u5e38\u7684\u65b9\u4fbf\uff0c\u4e0b\u8fb9\u7ed9\u51fa\u4e00\u4e9b\u4f8b\u5b50\u548c\u5206\u6790 NDH2K13-crackme-500 \u00b6 \u9996\u5148\u7528\u5e38\u89c4\u65b9\u6cd5\u5bf9 crackme \u6587\u4ef6\u8fdb\u884c\u5206\u6790 NDH2k13-crackme-500 [ master ] file crackme crackme: ELF 64 -bit LSB executable, x86-64, invalid version ( SYSV ) , for GNU/Linux 2 .6.9, statically linked, corrupted section header size NDH2k13-crackme-500 [ master ] nm ./crackme nm: out of memory allocating 109524665216 bytes after a total of 0 bytes NDH2k13-crackme-500 [ master ] objdump -d ./crackme -M intel objdump: ./crackme: \u4e0d\u53ef\u8bc6\u522b\u7684\u6587\u4ef6\u683c\u5f0f NDH2k13-crackme-500 [ master ] ./crackme Jonathan Salwan loves you < 3 ---------------------------- Password: test Bad password \u53d1\u73b0 section header \u53d7\u5230\u4e86\u635f\u574f\uff0c\u7528 IDA \u6253\u5f00\u65f6\u4e5f\u6709\u5f88\u591a\u62a5\u9519\uff0c\u8fd9\u65f6\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528 intel pin \u6765\u6c42\u89e3\u8fd9\u9053\u9898\u76ee\uff0c\u5148\u4f7f\u7528\u6700\u5e38\u89c1\u7684\u7edf\u8ba1\u6307\u4ee4\u6761\u6570\u7684\u65b9\u6cd5 NDH2k13-crackme-500 [ master ] ~/pin-3.6-gcc-linux/pin -t ./inscount0.so -- ./crackme <<< \"a\" >> /dev/null ; cat inscount.out Count 160345 NDH2k13-crackme-500 [ master\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme <<< \"a\" Jonathan Salwan loves you < 3 ---------------------------- Password: Bad password Count: 163218 NDH2k13-crackme-500 [ master\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme <<< \"aa\" Jonathan Salwan loves you < 3 ---------------------------- Password: Bad password Count: 166014 NDH2k13-crackme-500 [ master\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme <<< \"aaa\" Jonathan Salwan loves you < 3 ---------------------------- Password: Bad password Count: 168810 NDH2k13-crackme-500 [ master\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme <<< \"aaaa\" Jonathan Salwan loves you < 3 ---------------------------- Password: Bad password Count: 171606 NDH2k13-crackme-500 [ master\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme <<< \"aaaaa\" Jonathan Salwan loves you < 3 ---------------------------- Password: Bad password Count: 174402 NDH2k13-crackme-500 [ master\u25cf ] bpython bpython version 0 .17.1 on top of Python 2 .7.13+ /usr/bin/python2 >>> 174402 - 171606 == 171606 - 168810 == 168810 - 166014 == 166014 - 163218 True >>> \u6b64\u65f6\u6211\u4eec\u53d1\u73b0\u4e86\u4e00\u4e2a\u5f88\u6709\u8da3\u7684\u7279\u6027\uff0c\u8f93\u5165\u957f\u5ea6\u6bcf\u6b21\u589e\u52a0 1 \u65f6\uff0c\u6307\u4ee4\u6761\u6570\u4e5f\u662f\u4ee5\u7b49\u5dee\u7684\u89c4\u6a21\u9012\u589e\u7684 myInscount0 \u662f\u6211\u5728 inscount0 \u7684\u57fa\u7840\u4e0a\u66f4\u6539\u7684 pintool\uff0c\u5b9e\u73b0\u4e86\u4ece\u7ed3\u679c\u4fdd\u5b58\u5230\u6587\u4ef6\u5230\u7ed3\u679c\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\u7684\u4fee\u6539 \u6211\u4eec\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u811a\u672c\u67e5\u770b\u8f93\u5165\u957f\u5ea6\u9012\u589e\u65f6\uff0c\u6307\u4ee4\u6761\u6570\u7684\u53d8\u5316\u89c4\u5f8b NDH2k13 - crackme - 500 [ master \u25cf ] cat guessLen . py #!/usr/bin/env python # -*- coding: utf-8 -*- from subprocess import Popen , PIPE from sys import argv import string pinPath = \"/home/m4x/pin-3.6-gcc-linux/pin\" pinInit = lambda tool , elf : Popen ([ pinPath , '-t' , tool , '--' , elf ], stdin = PIPE , stdout = PIPE ) pinWrite = lambda cont : pin . stdin . write ( cont ) pinRead = lambda : pin . communicate ()[ 0 ] if __name__ == \"__main__\" : last = 0 for i in xrange ( 1 , 30 ): pin = pinInit ( \"./myInscount0.so\" , \"./crackme\" ) pinWrite ( \"a\" * i + ' \\n ' ) now = int ( pinRead () . split ( \"Count: \" )[ 1 ]) print \"inputLen( {:2d} ) -> ins( {} ) -> delta( {} )\" . format ( i , now , now - last ) last = now \u5728\u6211\u7535\u8111\u4e0a\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a NDH2k13 - crackme - 500 [ master \u25cf ] python guessLen . py inputLen ( 1 ) -> ins ( 160307 ) -> delta ( 160307 ) inputLen ( 2 ) -> ins ( 163103 ) -> delta ( 2796 ) inputLen ( 3 ) -> ins ( 165899 ) -> delta ( 2796 ) inputLen ( 4 ) -> ins ( 168695 ) -> delta ( 2796 ) inputLen ( 5 ) -> ins ( 171491 ) -> delta ( 2796 ) inputLen ( 6 ) -> ins ( 174287 ) -> delta ( 2796 ) inputLen ( 7 ) -> ins ( 177083 ) -> delta ( 2796 ) inputLen ( 8 ) -> ins ( 182804 ) -> delta ( 5721 ) inputLen ( 9 ) -> ins ( 182676 ) -> delta ( - 128 ) inputLen ( 10 ) -> ins ( 185472 ) -> delta ( 2796 ) inputLen ( 11 ) -> ins ( 188268 ) -> delta ( 2796 ) inputLen ( 12 ) -> ins ( 191064 ) -> delta ( 2796 ) inputLen ( 13 ) -> ins ( 193860 ) -> delta ( 2796 ) inputLen ( 14 ) -> ins ( 196656 ) -> delta ( 2796 ) inputLen ( 15 ) -> ins ( 199452 ) -> delta ( 2796 ) inputLen ( 16 ) -> ins ( 202248 ) -> delta ( 2796 ) inputLen ( 17 ) -> ins ( 205044 ) -> delta ( 2796 ) inputLen ( 18 ) -> ins ( 207840 ) -> delta ( 2796 ) inputLen ( 19 ) -> ins ( 210636 ) -> delta ( 2796 ) inputLen ( 20 ) -> ins ( 213432 ) -> delta ( 2796 ) inputLen ( 21 ) -> ins ( 216228 ) -> delta ( 2796 ) inputLen ( 22 ) -> ins ( 219024 ) -> delta ( 2796 ) inputLen ( 23 ) -> ins ( 221820 ) -> delta ( 2796 ) inputLen ( 24 ) -> ins ( 224616 ) -> delta ( 2796 ) inputLen ( 25 ) -> ins ( 227412 ) -> delta ( 2796 ) inputLen ( 26 ) -> ins ( 230208 ) -> delta ( 2796 ) inputLen ( 27 ) -> ins ( 244188 ) -> delta ( 13980 ) inputLen ( 28 ) -> ins ( 244188 ) -> delta ( 0 ) inputLen ( 29 ) -> ins ( 244188 ) -> delta ( 0 ) \u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u8f93\u5165\u957f\u5ea6 <8 \u65f6\uff0c\u6307\u4ee4\u6761\u6570\u662f\u9012\u589e\u7684\uff0c\u4f46\u957f\u5ea6\u4e3a 8 \u4e0e\u957f\u5ea6\u4e3a 7 \u6bd4\u8f83\u53d1\u751f\u4e86\u7a81\u53d8\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u5927\u80c6\u7684\u63a8\u6d4b\u5f53\u8f93\u5165\u957f\u5ea6\u4e3a 8 \u65f6\uff0c\u7a0b\u5e8f\u7684\u8fd0\u884c\u6d41\u7a0b\u6709\u4e86\u8f83\u5927\u7684\u53d8\u5316\uff0c\u6b63\u786e\u7684 flag \u957f\u5ea6\u5373\u4e3a 8 \u6211\u4eec\u4ee5\u8f93\u5165\u957f\u5ea6\u662f 8 \u4e3a\u524d\u63d0\uff0c\u518d\u67e5\u770b\u4e0d\u540c\u8f93\u5165\u4e0b\u6307\u4ee4\u6761\u6570\u7684\u53d8\u5316\u89c4\u5f8b NDH2k13-crackme-500 [ master\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme <<< \">???????\" Jonathan Salwan loves you < 3 ---------------------------- Password: Bad password Count: 185714 NDH2k13-crackme-500 [ master\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme <<< \"????????\" Jonathan Salwan loves you < 3 ---------------------------- Password: Bad password Count: 185714 NDH2k13-crackme-500 [ master\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme <<< \"@???????\" Jonathan Salwan loves you < 3 ---------------------------- Password: Bad password Count: 185714 NDH2k13-crackme-500 [ master\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme <<< \"A???????\" Jonathan Salwan loves you < 3 ---------------------------- Password: Bad password Count: 189752 NDH2k13-crackme-500 [ master\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme <<< \"B???????\" Jonathan Salwan loves you < 3 ---------------------------- Password: Bad password Count: 185714 NDH2k13-crackme-500 [ master\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme <<< \"C???????\" Jonathan Salwan loves you < 3 ---------------------------- Password: Bad password Count: 185714 \u53ef\u4ee5\u53d1\u73b0\uff0c\u8f93\u5165\u4ee5 ASCII\u7801 \u987a\u5e8f\u9012\u589e\u65f6\uff0c\u7b2c\u4e00\u4f4d\u4e3a A \u65f6\u6307\u4ee4\u6761\u6570\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u6b64\u65f6\u6211\u4eec\u5728\u8fdb\u4e00\u6b65\u63a8\u6d4b\u6b63\u786e\u7684 flag \u7b2c\u4e00\u4f4d\u5373\u4e3a A \u518d\u5199\u4e00\u4e2a\u811a\u672c\u9010\u4f4d\u7206\u7834 NDH2k13 - crackme - 500 [ master \u25cf ] cat guessPWD . py #!/usr/bin/env python # -*- coding: utf-8 -*- from subprocess import Popen , PIPE from sys import argv import string import pdb pinPath = \"/home/m4x/pin-3.6-gcc-linux/pin\" pinInit = lambda tool , elf : Popen ([ pinPath , '-t' , tool , '--' , elf ], stdin = PIPE , stdout = PIPE ) pinWrite = lambda cont : pin . stdin . write ( cont ) pinRead = lambda : pin . communicate ()[ 0 ] if __name__ == \"__main__\" : last = 0 # dic = map(chr, xrange(0x20, 0x80)) dic = string . ascii_letters + string . digits + \"+_ \" pwd = '?' * 8 dicIdx = 0 pwdIdx = 0 while True : pwd = pwd [: pwdIdx ] + dic [ dicIdx ] + pwd [ pwdIdx + 1 : ] # pdb.set_trace() pin = pinInit ( \"./myInscount1.so\" , \"./crackme\" ) pinWrite ( pwd + ' \\n ' ) now = int ( pinRead () . split ( \"Count: \" )[ 1 ]) print \"input( {} ) -> now( {} ) -> delta( {} )\" . format ( pwd , now , now - last ) if now - last > 2000 and dicIdx : pwdIdx += 1 dicIdx = - 1 last = 0 if pwdIdx >= len ( pwd ): print \"Found pwd: {} \" . format ( pwd ) break dicIdx += 1 last = now \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b NDH2k13-crackme-500 [ master\u25cf ] time python guessPWD.py input ( a??????? ) -> now ( 182804 ) -> delta ( 182804 ) input ( b??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( c??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( d??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( e??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( f??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( g??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( h??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( i??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( j??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( k??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( l??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( m??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( n??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( o??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( p??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( q??????? ) -> now ( 182804 ) -> delta ( 0 ) ...... input ( AzI0wBsO ) -> now ( 211070 ) -> delta ( 0 ) input ( AzI0wBsP ) -> now ( 211069 ) -> delta ( -1 ) input ( AzI0wBsQ ) -> now ( 211069 ) -> delta ( 0 ) input ( AzI0wBsR ) -> now ( 211069 ) -> delta ( 0 ) input ( AzI0wBsS ) -> now ( 211069 ) -> delta ( 0 ) input ( AzI0wBsT ) -> now ( 211069 ) -> delta ( 0 ) input ( AzI0wBsU ) -> now ( 211069 ) -> delta ( 0 ) input ( AzI0wBsV ) -> now ( 211069 ) -> delta ( 0 ) input ( AzI0wBsW ) -> now ( 211069 ) -> delta ( 0 ) input ( AzI0wBsX ) -> now ( 214976 ) -> delta ( 3907 ) Found pwd: AzI0wBsX python guessPWD.py 31 .04s user 14 .72s system 105 % cpu 43 .341 total \u9a8c\u8bc1\u4e00\u4e0b NDH2k13-crackme-500 [ master\u25cf ] ./crackme Jonathan Salwan loves you < 3 ---------------------------- Password: AzI0wBsX Good password \u8fd9\u6837\uff0c\u6211\u4eec\u7528\u4e0d\u5230 5 \u5206\u949f\u7684\u65f6\u95f4\u5c31\u731c\u51fa\u4e86 flag inscount1(BB\u7ea7\u63d2\u6869) \u4e0e inscount0(ins\u7ea7\u63d2\u6869) \u6548\u679c\u76f8\u540c\uff0c\u4f46 inscount1 \u901f\u5ea6\u66f4\u5feb\uff0c\u5b9e\u9645\u89e3\u9898\u65f6\u53ef\u4ee5\u7528 inscount1 \u4ee3\u66ff inscount0 hxpCTF-2017-main_strip \u00b6 \u518d\u4ee5 hxpCTF2017 \u7684\u4e00\u9053\u9898\u76ee\u6f14\u793a\u6539\u9020 pintool \u7528\u4e8e\u89e3\u9898\uff0c\u6211\u4eec\u7740\u91cd\u6f14\u793a\u6539\u9020 pintool \u7684\u6b65\u9aa4\uff0c\u56e0\u6b64\u6062\u590d\u7b26\u53f7\u8868\u548c\u5206\u6790\u7a0b\u5e8f\u6d41\u7a0b\u7684\u90e8\u5206\u53ef\u4ee5\u53c2\u8003\u8fd9\u7bc7 writeup \u6211\u4eec\u5148\u5c1d\u8bd5\u7528\u4e0a\u4f8b\u7684\u65b9\u6cd5\u89e3\u8fd9\u9053\u9898\u76ee hxpCTF-2017-main_strip [ master\u25cf\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount1.so -- ./main_strip a Nope. Count: 517715 hxpCTF-2017-main_strip [ master\u25cf\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount1.so -- ./main_strip a Nope. Count: 545828 hxpCTF-2017-main_strip [ master\u25cf\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount1.so -- ./main_strip a Nope. Count: 532656 hxpCTF-2017-main_strip [ master\u25cf\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount1.so -- ./main_strip a Nope. Count: 524544 hxpCTF-2017-main_strip [ master\u25cf\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount1.so -- ./main_strip a Nope. Count: 582401 \u5f88\u4e0d\u5e78\uff0c\u5373\u4f7f\u6211\u4eec\u4f7f\u7528\u540c\u4e00\u4e2a\u8f93\u5165\uff0c\u6307\u4ee4\u6570\u4e5f\u662f\u6709\u8f83\u5927\u53d8\u5316\u7684\uff0c\u4f7f\u7528\u73b0\u6709\u7684 pintool \u96be\u4ee5\u89e3\u51fa\u8fd9\u9053\u9898\u76ee\uff0c\u6211\u4eec\u8fdb\u884c\u66f4\u6df1\u4e00\u6b65\u7684\u5206\u6790\uff0c\u9a8c\u8bc1 flag \u7684\u5173\u952e\u90e8\u5206\u53ef\u4ee5\u8868\u793a\u4e3a\u5982\u4e0b\u4ee3\u7801 for ( int i = 0 ; i < length ( provided_flag ); i ++ ) { if ( main_mapanic ( provided_flag [ i ]) != constant_binary_blob [ i ]) { bad_boy (); exit (); } goodboy (); } \u53ef\u4ee5\u770b\u51fa\u5224\u65ad\u76f8\u7b49\u662f\u9010\u4f4d\u8fdb\u884c\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u8003\u8651\u5bf9 inscount0 \u7684 docount \u51fd\u6570\u505a\u5982\u4e0b\u66f4\u6539 \u66f4\u6539\u524d\uff1a VOID docount () { icount ++ ; } \u66f4\u6539\u540e\uff1a VOID docount ( void * ip ) { // .text:000000000047B96E cmp al, cl; cmp mapanic(provided_flag[i]), constant_binary_blob[i] if (( long long int ) ip == 0x000000000047B96E ) icount ++ ; } \u53ea\u6709\u8fd0\u884c\u5230 0x47B96E \u4e00\u53e5\u624d\u4f1a\u8ba1\u6570\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e pintool \u7684\u7ed3\u679c\u6765\u9010\u4f4d\u7206\u7834 flag \u4e86 \u7136\u800c\uff0c\u56e0\u4e3a\u8be5\u9898\u76ee\u7684\u6307\u4ee4\u8f83\u591a\uff0c\u6307\u4ee4\u7ea7\u522b\u7684\u63d2\u6869\u4f1a\u8017\u8d39\u8f83\u957f\u65f6\u95f4\uff0c\u9700\u89811h\u5de6\u53f3\u624d\u80fd\u5f97\u5230 flag \u9898\u76ee \u00b6 xman2018\u9009\u62d4\u8d5b-ollvm \u603b\u7ed3 \u00b6 \u4f7f\u7528 intel pin \u53ef\u4ee5\u89e3\u4e00\u90e8\u5206 CTF challenges\uff0c\u5c24\u5176\u662f\u865a\u62df\u673a\u6216\u8005\u6df7\u6dc6\u4e25\u91cd\u7684\u9006\u5411\u9898\u76ee\uff0c\u4f46 pin \u7684\u7528\u9014\u7edd\u4e0d\u5c40\u9650\u4e8e\u6c42\u89e3 CTF challenges \u4f7f\u7528 pin \u53ef\u4ee5\u89e3\u4e00\u90e8\u5206 CTF \u9898\u76ee\uff0c\u4f46\u4e5f\u4ec5\u4ec5\u662f\u4e00\u90e8\u5206\u9898\u76ee\uff0c\u591a\u6570\u9898\u76ee\u7531\u4e8e\u63d2\u6869\u4ee3\u4ef7\u5927\uff0c\u96be\u4ee5\u63d0\u53d6\u4fa7\u4fe1\u9053\u4fe1\u606f\uff0cpintool \u96be\u4ee5\u7f16\u5199\u7b49\u539f\u56e0\u4f7f\u7528 pin \u6c42\u89e3\u5f97\u4e0d\u507f\u5931\uff0c\u56e0\u6b64\u4f7f\u7528 pin \u6c42\u89e3 CTF challenges \u53ef\u4ee5\u603b\u7ed3\u4e3a\u4e0b\u6761\u539f\u5219\uff1a \u80fd\u7528\u8840\u8d5a\uff0c\u51c9\u4e86\u4e0d\u4e8f Reference \u00b6 http://shell-storm.org/blog/A-binary-analysis-count-me-if-you-can/ http://brieflyx.me/2017/binary-analysis/intel-pin-intro/ http://eternal.red/2017/dont_panic-writeup/ https://github.com/0x01f/pin-in-CTF","title":"Intel pin"},{"location":"binary-core-tools/instrumentation/intel_pin/#intel-pin","text":"","title":"intel pin"},{"location":"binary-core-tools/instrumentation/intel_pin/#pin","text":"pin \u662f intel \u5f00\u53d1\u7684\u4e00\u6b3e\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u7684\u63d2\u6869\u5206\u6790\u5de5\u5177\uff0c\u652f\u6301 x86/x64 & windows/linux/mac\uff0c\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684 API \u4f9b\u4f7f\u7528\u8005\u7528 C/C++ \u7f16\u5199 pintool \u5206\u6790\u7a0b\u5e8f","title":"\u4ec0\u4e48\u662f pin"},{"location":"binary-core-tools/instrumentation/intel_pin/#instrument","text":"\u901a\u4fd7\u7684\u6765\u8bf4\uff0c\u63d2\u6869\u5c31\u662f\u5728\u5df2\u6709\u7684\u6e90\u4ee3\u7801/\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u4e2d\u63d2\u5165\u67d0\u4e9b\u4ee3\u7801\u4ee5\u4fbf\u4e8e\u81ea\u5df1\u5206\u6790\uff0c\u6bd4\u5982\u5728\u8c03\u8bd5\u65f6\u4f7f\u7528 printf \u6253\u5370\u53d8\u91cf\u503c\u5c31\u5c5e\u4e8e\u5728\u6e90\u4ee3\u7801\u7ea7\u522b\u7684\u63d2\u6869\u3002\u800cintel pin\u5c31\u662f\u5728\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u7ea7\u522b\uff08\u6ca1\u6709\u6e90\u4ee3\u7801\uff09\u63d2\u6869\u7684\u4e00\u6b3e\u5de5\u5177","title":"\u4ec0\u4e48\u662f\u63d2\u6869(instrument)"},{"location":"binary-core-tools/instrumentation/intel_pin/#pin-pintool","text":"","title":"pin \u548c pintool"},{"location":"binary-core-tools/instrumentation/intel_pin/#pin-pintool_1","text":"pin \u7684\u5b89\u88c5\u5f88\u7b80\u5355\uff0c\u8fd9\u91cc\u4ee5 64 \u4f4d\u7684 Linux \u4e3a\u4f8b\u6765\u8bf4\u660e\uff0c\u4ece \u5b98\u7f51 \u4e0a\u4e0b\u8f7d pin \u7ec4\u4ef6\u540e\uff0c\u89e3\u538b\u5373\u53ef\uff0c\u5728\u89e3\u538b\u540e\u7684\u6587\u4ef6\u5939\u5185\u6709\u7f16\u8bd1\u597d\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f pin pin-3.6-gcc-linux ls doc extlicense extras ia32 intel64 LICENSE pin README redist.txt source pin-3.6-gcc-linux file pin pin: ELF 32 -bit LSB executable, Intel 80386 , version 1 ( SYSV ) , statically linked, BuildID [ sha1 ]= 7beaa83f9142955a6e933bf29d4a8aa1269298bc, stripped pin-3.6-gcc-linux ./pin E: Missing application name Pin: pin-3.6-97554-31f0a167d Copyright ( c ) 2003 -2017, Intel Corporation. All rights reserved. Usage: pin [ OPTION ] [ -t <tool> [ <toolargs> ]] -- < command line> Use -help for a description of options \u5728 source/tools/ManualExamples \u4e2d\u6709\u4e00\u4e9b\u73b0\u6210\u7684 pintool \u53ef\u4ee5\u4f7f\u7528\uff0c\u57fa\u672c\u6db5\u76d6\u4e86\u5404\u4e2a\u6a21\u5757\u7684\u7528\u6cd5\uff0c\u8fd9\u91cc\u4ee5 inscount0 \u8fd9\u4e2a pintool \u4e3a\u4f8b\u4ecb\u7ecd pin \u7684\u4f7f\u7528\u65b9\u6cd5 pin-3.6-gcc-linux cd source/tools/ManualExamples ManualExamples file inscount0.cpp inscount0.cpp: C source, ASCII text ManualExamples make obj-intel64/inscount0.so TARGET = intel64 g++ -Wall -Werror -Wno-unknown-pragmas -D__PIN__ = 1 -DPIN_CRT = 1 -fno-stack-protector -fno-exceptions -funwind-tables -fasynchronous-unwind-tables -fno-rtti -DTARGET_IA32E -DHOST_IA32E -fPIC -DTARGET_LINUX -fabi-version = 2 -I../../../source/include/pin -I../../../source/include/pin/gen -isystem /home/m4x/pin-3.6-gcc-linux/extras/stlport/include -isystem /home/m4x/pin-3.6-gcc-linux/extras/libstdc++/include -isystem /home/m4x/pin-3.6-gcc-linux/extras/crt/include -isystem /home/m4x/pin-3.6-gcc-linux/extras/crt/include/arch-x86_64 -isystem /home/m4x/pin-3.6-gcc-linux/extras/crt/include/kernel/uapi -isystem /home/m4x/pin-3.6-gcc-linux/extras/crt/include/kernel/uapi/asm-x86 -I../../../extras/components/include -I../../../extras/xed-intel64/include/xed -I../../../source/tools/InstLib -O3 -fomit-frame-pointer -fno-strict-aliasing -c -o obj-intel64/inscount0.o inscount0.cpp g++ -shared -Wl,--hash-style = sysv ../../../intel64/runtime/pincrt/crtbeginS.o -Wl,-Bsymbolic -Wl,--version-script = ../../../source/include/pin/pintool.ver -fabi-version = 2 -o obj-intel64/inscount0.so obj-intel64/inscount0.o -L../../../intel64/runtime/pincrt -L../../../intel64/lib -L../../../intel64/lib-ext -L../../../extras/xed-intel64/lib -lpin -lxed ../../../intel64/runtime/pincrt/crtendS.o -lpin3dwarf -ldl-dynamic -nostdlib -lstlport-dynamic -lm-dynamic -lc-dynamic -lunwind-dynamic ManualExamples file obj-intel64/inscount0.so obj-intel64/inscount0.so: ELF 64 -bit LSB shared object, x86-64, version 1 ( SYSV ) , dynamically linked, BuildID [ sha1 ]= 3baa29dd54235acaab02edc94bf9ac377dd7b0e5, not stripped \u6b64\u65f6\u5728 obj-intel64 \u4e0b\u7f16\u8bd1\u751f\u6210\u4e86 inscount0.so\uff0c\u8fd9\u4e2a so \u5373\u4e3a\u4e00\u79cd pintool\uff0c\u529f\u80fd\u4e3a\u8bb0\u5f55\u7a0b\u5e8f\u6267\u884c\u7684\u6307\u4ee4\u7684\u6761\u6570\uff1b \u5224\u65ad pintool \u7684\u529f\u80fd\u53ef\u4ee5\u9605\u8bfb pintool \u6e90\u4ee3\u7801\u6216\u8005\u4f7f\u7528\u4e0b\u6761\u6307\u4ee4 $ pin -t your_pintool -h -- your_application \u7c7b\u4f3c\u7684\uff0c\u8981\u7f16\u8bd1 32 \u4f4d\u7684 pintool \u53ef\u4ee5\u4f7f\u7528 make obj-ia32/inscount0.so \u7f16\u8bd1 ManualExamples \u4e2d\u7684\u6240\u6709 pintool \u53ef\u4ee5\u4f7f\u7528 make all TAEGET = intel64 make all TAEGET = ia32","title":"pin \u7684\u5b89\u88c5\uff0cpintool \u7684\u7f16\u8bd1"},{"location":"binary-core-tools/instrumentation/intel_pin/#pin_1","text":"pin \u7684\u57fa\u672c\u547d\u4ee4\u683c\u5f0f\u5982\u4e0b pin -t your_pintool -- your_binary <arg> \u4ee5\u521a\u521a\u7f16\u8bd1\u7684 inscount0 \u8fd9\u4e2a pintool \u4e3a\u4f8b ManualExamples ../../../pin -t ./obj-intel64/inscount0.so -- /bin/ls -a . inscount2.cpp obj-intel64 .. inscount.out pinatrace.cpp buffer_linux.cpp inscount_tls.cpp pin.log buffer_windows.cpp invocation.cpp proccount.cpp countreps.cpp isampling.cpp replacesigprobed.cpp detach.cpp itrace.cpp safecopy.cpp divide_by_zero_unix.c little_malloc.c stack-debugger.cpp divide_by_zero_win.c logtrace.cpp stack-debugger-tutorial.sln emudiv.cpp makefile stack-debugger-tutorial.vcxproj fibonacci.cpp makefile.rules stack-debugger-tutorial.vcxproj.filters follow_child_app1.cpp malloc.cpp statica.cpp follow_child_app2.cpp malloc_mt.cpp staticcount.cpp follow_child_tool.cpp malloctrace.cpp strace.cpp fork_app.cpp myInscount0.cpp test fork_jit_tool.cpp myInscount1.cpp test.c imageload.cpp myMalloctrace.cpp test-packed inscount0.cpp nonstatica.cpp tracer.cpp inscount1.cpp obj-ia32 w_malloctrace.cpp ManualExamples cat inscount.out Count 813449 inscount \u9ed8\u8ba4\u7ed3\u679c\u4fdd\u5b58\u5728 inscount.out \u8fd9\u4e2a\u6587\u4ef6\u4e2d\uff0c\u5728\u4e0a\u4f8b\u4e2d\uff0c\u5373\u6b64\u65f6 ls -a \u8fd9\u6761\u547d\u4ee4\u5171\u6267\u884c\u4e86 813449 \u6761\u6307\u4ee4","title":"pin \u7684\u4f7f\u7528"},{"location":"binary-core-tools/instrumentation/intel_pin/#pintool","text":"\u540c\u6837\u4ee5 inscount0 \u4e3a\u4f8b\u5206\u6790\uff0c\u67e5\u770b inscount0.cpp \u7684\u5185\u5bb9 #include <iostream> #include <fstream> #include \"pin.H\" ofstream OutFile ; // The running count of instructions is kept here // make it static to help the compiler optimize docount static UINT64 icount = 0 ; // This function is called before every instruction is executed VOID docount () { icount ++ ; } // Pin calls this function every time a new instruction is encountered VOID Instruction ( INS ins , VOID * v ) { // Insert a call to docount before every instruction, no arguments are passed INS_InsertCall ( ins , IPOINT_BEFORE , ( AFUNPTR ) docount , IARG_END ); } KNOB < string > KnobOutputFile ( KNOB_MODE_WRITEONCE , \"pintool\" , \"o\" , \"inscount.out\" , \"specify output file name\" ); // This function is called when the application exits VOID Fini ( INT32 code , VOID * v ) { // Write to a file since cout and cerr maybe closed by the application OutFile . setf ( ios :: showbase ); OutFile << \"Count \" << icount << endl ; OutFile . close (); } /* ===================================================================== */ /* Print Help Message */ /* ===================================================================== */ INT32 Usage () { cerr << \"This tool counts the number of dynamic instructions executed\" << endl ; cerr << endl << KNOB_BASE :: StringKnobSummary () << endl ; return - 1 ; } /* ===================================================================== */ /* Main */ /* ===================================================================== */ /* argc, argv are the entire command line: pin -t <toolname> -- ... */ /* ===================================================================== */ int main ( int argc , char * argv []) { // Initialize pin if ( PIN_Init ( argc , argv )) return Usage (); OutFile . open ( KnobOutputFile . Value (). c_str ()); // Register Instruction to be called to instrument instructions INS_AddInstrumentFunction ( Instruction , 0 ); // Register Fini to be called when the application exits PIN_AddFiniFunction ( Fini , 0 ); // Start the program, never returns PIN_StartProgram (); return 0 ; } \u4ece main \u5f00\u59cb\uff0c\u9996\u5148\u8c03\u7528\u4e86 PIN_init\uff0853 \u884c\uff09\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u7136\u540e\u4f7f\u7528 INS_AddInstrumenFunction \u6ce8\u518c\u4e86\u4e00\u4e2a\u63d2\u6869\u51fd\u6570(58\u884c)\uff0c\u6839\u636e intel pin \u7684 \u7528\u6237\u624b\u518c PIN_CALLBACK LEVEL_PINCLIENT :: INS_AddInstrumentFunction ( INS_INSTRUMENT_CALLBACK fun , VOID * val ) Add a function used to instrument at instruction granularity Parameters : fun Instrumentation function for instructions val passed as the second argument to the instrumentation function Returns : PIN_CALLBACK A handle to a callback that can be used to further modify this callback ' s properties Note : The pin client lock is obtained during the call of this API . Availability : Mode : JIT O / S : Linux , Windows & OS X * CPU : All \u5728\u8fd9\u91cc\u8be5\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5728\u6307\u4ee4\u7c92\u5ea6\u63d2\u5165 Instruction \u51fd\u6570\uff0c\u5373\u5728\u6bcf\u6761\u6307\u4ee4\u6267\u884c\u524d\uff0c\u90fd\u4f1a\u8fdb\u5165 Instruction \u8fd9\u4e2a\u51fd\u6570\u4e2d\uff0c\u5176\u7b2c2\u4e2a\u53c2\u6570\u4e3a\u4e00\u4e2a\u989d\u5916\u4f20\u9012\u7ed9 Instruction \u7684\u53c2\u6570\uff0c\u5373\u5bf9\u5e94 VOID *v \u8fd9\u4e2a\u53c2\u6570\uff0c\u8fd9\u91cc\u6ca1\u6709\u4f7f\u7528\u3002\u800c Instruction \u63a5\u53d7\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a INS \u7ed3\u6784\uff0c\u7528\u6765\u8868\u793a\u4e00\u6761\u6307\u4ee4 \u800c\u6211\u4eec\u518d\u770b Instruction \u8fd9\u4e2a\u51fd\u6570 VOID Instruction ( INS ins , VOID * v ) { // Insert a call to docount before every instruction, no arguments are passed INS_InsertCall ( ins , IPOINT_BEFORE , ( AFUNPTR ) docount , IARG_END ); } \u5728 Instruction \u51fd\u6570\u5185\u90e8\u53c8\u4f7f\u7528 INS_InsertCall \u6ce8\u518c\u4e86\u4e00\u4e2a\u51fd\u6570 docount\uff0c\u5373\u5728\u6bcf\u6761\u6307\u4ee4\u524d\u5b9e\u9645\u63d2\u5165\u4e86 docount \u8fd9\u4e2a\u51fd\u6570\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f INS_InsertCall \u8bd5\u4e00\u4e2a\u4fbf\u9910\u51fd\u6570\uff0c\u524d\u4e09\u4e2a\u53c2\u6570\u5206\u522b\u4e3a\u6307\u4ee4(ins)\uff0c\u63d2\u5165\u7684\u5b9e\u9645(IPOINT_BEFORE\uff0c\u8868\u793a\u5728\u6307\u4ee4\u8fd0\u884c\u4e4b\u524d\u63d2\u5165 docount \u51fd\u6570)\uff0c\u51fd\u6570\u6307\u9488(docount\uff0c\u8f6c\u5316\u4e3a\u4e86 AFUNPTR \u7c7b\u578b)\uff0c\u4e4b\u540e\u7684\u53c2\u6570\u4e3a\u4f20\u9012\u7ed9 docount \u51fd\u6570\u7684\u53c2\u6570\uff0c\u4ee5 IARG_END \u7ed3\u5c3e \u800c docount \u51fd\u6570\uff0812 \u884c\uff09\u7684\u4f5c\u7528\u5c31\u5f88\u660e\u663e\u4e86\uff0c\u6bcf\u6b21\u5c06\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u52a0 1\uff0c\u56e0\u6b64\u6b64\u65f6 /bin/ls -a \u8fd0\u884c\u7684\u6a21\u5f0f\u5982\u4e0b: ... icount++; sub $0xff, %edx icount++; cmp %esi, %edx icount++; jle <L1> icount++; mov $0x1, %edi icount++; add $0x10, %eax ... \u6240\u4ee5 inscount0 \u7684\u7528\u9014\u5c31\u5f88\u660e\u663e\u4e86\uff0c\u6bcf\u6761\u6307\u4ee4\u524d\u90fd\u8c03\u7528 docount \u51fd\u6570\u5c06\u5168\u5c40\u53d8\u91cf icount \u81ea\u589e\uff0c\u6700\u540e\u901a\u8fc7PIN_AddFiniFunction \u51fd\u6570\u6ce8\u518c\u7684 Fini \u51fd\u6570(25\u884c)\u5c06\u7ed3\u679c\u5199\u5230\u4e00\u4e2a\u6587\u4ef6\u4e2d\u3002 \u5f53\u8fd9\u4e9b\u51fd\u6570\u90fd\u5b9a\u4e49\u5b8c\u540e\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528 PIN_StartProgram \u6765\u542f\u52a8\u7a0b\u5e8f\u4e86 \u8fd9\u91cc\u5206\u6790\u4e86\u4e00\u4e2a\u6700\u7b80\u5355\u7684 pintool \u4f8b\u5b50\uff0c\u66f4\u591a pintool \u4f8b\u5b50\u7684\u5206\u6790\u548c\u5176\u4ed6\u51fd\u6570\u7684\u4f7f\u7528\u53ef\u4ee5\u53c2\u8003 BrieflyX \u7684 \u535a\u5ba2","title":"pintool \u7684\u5206\u6790"},{"location":"binary-core-tools/instrumentation/intel_pin/#pin-in-ctf","text":"\u56e0\u4e3a\u52a8\u6001\u63d2\u6869\u6709\u4e0d\u91cd\u65b0\u7f16\u8bd1\u5373\u53ef\u6536\u96c6\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u67d0\u4e9b\u4fe1\u606f\u7684\u7279\u6027\uff0c\u56e0\u6b64\u7528 pin \u6c42\u89e3 \u4e00\u90e8\u5206 CTF challenges \u4f1a\u5f02\u5e38\u7684\u65b9\u4fbf\uff0c\u4e0b\u8fb9\u7ed9\u51fa\u4e00\u4e9b\u4f8b\u5b50\u548c\u5206\u6790","title":"pin in CTF"},{"location":"binary-core-tools/instrumentation/intel_pin/#ndh2k13-crackme-500","text":"\u9996\u5148\u7528\u5e38\u89c4\u65b9\u6cd5\u5bf9 crackme \u6587\u4ef6\u8fdb\u884c\u5206\u6790 NDH2k13-crackme-500 [ master ] file crackme crackme: ELF 64 -bit LSB executable, x86-64, invalid version ( SYSV ) , for GNU/Linux 2 .6.9, statically linked, corrupted section header size NDH2k13-crackme-500 [ master ] nm ./crackme nm: out of memory allocating 109524665216 bytes after a total of 0 bytes NDH2k13-crackme-500 [ master ] objdump -d ./crackme -M intel objdump: ./crackme: \u4e0d\u53ef\u8bc6\u522b\u7684\u6587\u4ef6\u683c\u5f0f NDH2k13-crackme-500 [ master ] ./crackme Jonathan Salwan loves you < 3 ---------------------------- Password: test Bad password \u53d1\u73b0 section header \u53d7\u5230\u4e86\u635f\u574f\uff0c\u7528 IDA \u6253\u5f00\u65f6\u4e5f\u6709\u5f88\u591a\u62a5\u9519\uff0c\u8fd9\u65f6\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528 intel pin \u6765\u6c42\u89e3\u8fd9\u9053\u9898\u76ee\uff0c\u5148\u4f7f\u7528\u6700\u5e38\u89c1\u7684\u7edf\u8ba1\u6307\u4ee4\u6761\u6570\u7684\u65b9\u6cd5 NDH2k13-crackme-500 [ master ] ~/pin-3.6-gcc-linux/pin -t ./inscount0.so -- ./crackme <<< \"a\" >> /dev/null ; cat inscount.out Count 160345 NDH2k13-crackme-500 [ master\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme <<< \"a\" Jonathan Salwan loves you < 3 ---------------------------- Password: Bad password Count: 163218 NDH2k13-crackme-500 [ master\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme <<< \"aa\" Jonathan Salwan loves you < 3 ---------------------------- Password: Bad password Count: 166014 NDH2k13-crackme-500 [ master\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme <<< \"aaa\" Jonathan Salwan loves you < 3 ---------------------------- Password: Bad password Count: 168810 NDH2k13-crackme-500 [ master\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme <<< \"aaaa\" Jonathan Salwan loves you < 3 ---------------------------- Password: Bad password Count: 171606 NDH2k13-crackme-500 [ master\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme <<< \"aaaaa\" Jonathan Salwan loves you < 3 ---------------------------- Password: Bad password Count: 174402 NDH2k13-crackme-500 [ master\u25cf ] bpython bpython version 0 .17.1 on top of Python 2 .7.13+ /usr/bin/python2 >>> 174402 - 171606 == 171606 - 168810 == 168810 - 166014 == 166014 - 163218 True >>> \u6b64\u65f6\u6211\u4eec\u53d1\u73b0\u4e86\u4e00\u4e2a\u5f88\u6709\u8da3\u7684\u7279\u6027\uff0c\u8f93\u5165\u957f\u5ea6\u6bcf\u6b21\u589e\u52a0 1 \u65f6\uff0c\u6307\u4ee4\u6761\u6570\u4e5f\u662f\u4ee5\u7b49\u5dee\u7684\u89c4\u6a21\u9012\u589e\u7684 myInscount0 \u662f\u6211\u5728 inscount0 \u7684\u57fa\u7840\u4e0a\u66f4\u6539\u7684 pintool\uff0c\u5b9e\u73b0\u4e86\u4ece\u7ed3\u679c\u4fdd\u5b58\u5230\u6587\u4ef6\u5230\u7ed3\u679c\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\u7684\u4fee\u6539 \u6211\u4eec\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u811a\u672c\u67e5\u770b\u8f93\u5165\u957f\u5ea6\u9012\u589e\u65f6\uff0c\u6307\u4ee4\u6761\u6570\u7684\u53d8\u5316\u89c4\u5f8b NDH2k13 - crackme - 500 [ master \u25cf ] cat guessLen . py #!/usr/bin/env python # -*- coding: utf-8 -*- from subprocess import Popen , PIPE from sys import argv import string pinPath = \"/home/m4x/pin-3.6-gcc-linux/pin\" pinInit = lambda tool , elf : Popen ([ pinPath , '-t' , tool , '--' , elf ], stdin = PIPE , stdout = PIPE ) pinWrite = lambda cont : pin . stdin . write ( cont ) pinRead = lambda : pin . communicate ()[ 0 ] if __name__ == \"__main__\" : last = 0 for i in xrange ( 1 , 30 ): pin = pinInit ( \"./myInscount0.so\" , \"./crackme\" ) pinWrite ( \"a\" * i + ' \\n ' ) now = int ( pinRead () . split ( \"Count: \" )[ 1 ]) print \"inputLen( {:2d} ) -> ins( {} ) -> delta( {} )\" . format ( i , now , now - last ) last = now \u5728\u6211\u7535\u8111\u4e0a\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a NDH2k13 - crackme - 500 [ master \u25cf ] python guessLen . py inputLen ( 1 ) -> ins ( 160307 ) -> delta ( 160307 ) inputLen ( 2 ) -> ins ( 163103 ) -> delta ( 2796 ) inputLen ( 3 ) -> ins ( 165899 ) -> delta ( 2796 ) inputLen ( 4 ) -> ins ( 168695 ) -> delta ( 2796 ) inputLen ( 5 ) -> ins ( 171491 ) -> delta ( 2796 ) inputLen ( 6 ) -> ins ( 174287 ) -> delta ( 2796 ) inputLen ( 7 ) -> ins ( 177083 ) -> delta ( 2796 ) inputLen ( 8 ) -> ins ( 182804 ) -> delta ( 5721 ) inputLen ( 9 ) -> ins ( 182676 ) -> delta ( - 128 ) inputLen ( 10 ) -> ins ( 185472 ) -> delta ( 2796 ) inputLen ( 11 ) -> ins ( 188268 ) -> delta ( 2796 ) inputLen ( 12 ) -> ins ( 191064 ) -> delta ( 2796 ) inputLen ( 13 ) -> ins ( 193860 ) -> delta ( 2796 ) inputLen ( 14 ) -> ins ( 196656 ) -> delta ( 2796 ) inputLen ( 15 ) -> ins ( 199452 ) -> delta ( 2796 ) inputLen ( 16 ) -> ins ( 202248 ) -> delta ( 2796 ) inputLen ( 17 ) -> ins ( 205044 ) -> delta ( 2796 ) inputLen ( 18 ) -> ins ( 207840 ) -> delta ( 2796 ) inputLen ( 19 ) -> ins ( 210636 ) -> delta ( 2796 ) inputLen ( 20 ) -> ins ( 213432 ) -> delta ( 2796 ) inputLen ( 21 ) -> ins ( 216228 ) -> delta ( 2796 ) inputLen ( 22 ) -> ins ( 219024 ) -> delta ( 2796 ) inputLen ( 23 ) -> ins ( 221820 ) -> delta ( 2796 ) inputLen ( 24 ) -> ins ( 224616 ) -> delta ( 2796 ) inputLen ( 25 ) -> ins ( 227412 ) -> delta ( 2796 ) inputLen ( 26 ) -> ins ( 230208 ) -> delta ( 2796 ) inputLen ( 27 ) -> ins ( 244188 ) -> delta ( 13980 ) inputLen ( 28 ) -> ins ( 244188 ) -> delta ( 0 ) inputLen ( 29 ) -> ins ( 244188 ) -> delta ( 0 ) \u53ef\u4ee5\u53d1\u73b0\uff0c\u5728\u8f93\u5165\u957f\u5ea6 <8 \u65f6\uff0c\u6307\u4ee4\u6761\u6570\u662f\u9012\u589e\u7684\uff0c\u4f46\u957f\u5ea6\u4e3a 8 \u4e0e\u957f\u5ea6\u4e3a 7 \u6bd4\u8f83\u53d1\u751f\u4e86\u7a81\u53d8\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u5927\u80c6\u7684\u63a8\u6d4b\u5f53\u8f93\u5165\u957f\u5ea6\u4e3a 8 \u65f6\uff0c\u7a0b\u5e8f\u7684\u8fd0\u884c\u6d41\u7a0b\u6709\u4e86\u8f83\u5927\u7684\u53d8\u5316\uff0c\u6b63\u786e\u7684 flag \u957f\u5ea6\u5373\u4e3a 8 \u6211\u4eec\u4ee5\u8f93\u5165\u957f\u5ea6\u662f 8 \u4e3a\u524d\u63d0\uff0c\u518d\u67e5\u770b\u4e0d\u540c\u8f93\u5165\u4e0b\u6307\u4ee4\u6761\u6570\u7684\u53d8\u5316\u89c4\u5f8b NDH2k13-crackme-500 [ master\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme <<< \">???????\" Jonathan Salwan loves you < 3 ---------------------------- Password: Bad password Count: 185714 NDH2k13-crackme-500 [ master\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme <<< \"????????\" Jonathan Salwan loves you < 3 ---------------------------- Password: Bad password Count: 185714 NDH2k13-crackme-500 [ master\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme <<< \"@???????\" Jonathan Salwan loves you < 3 ---------------------------- Password: Bad password Count: 185714 NDH2k13-crackme-500 [ master\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme <<< \"A???????\" Jonathan Salwan loves you < 3 ---------------------------- Password: Bad password Count: 189752 NDH2k13-crackme-500 [ master\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme <<< \"B???????\" Jonathan Salwan loves you < 3 ---------------------------- Password: Bad password Count: 185714 NDH2k13-crackme-500 [ master\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount0.so -- ./crackme <<< \"C???????\" Jonathan Salwan loves you < 3 ---------------------------- Password: Bad password Count: 185714 \u53ef\u4ee5\u53d1\u73b0\uff0c\u8f93\u5165\u4ee5 ASCII\u7801 \u987a\u5e8f\u9012\u589e\u65f6\uff0c\u7b2c\u4e00\u4f4d\u4e3a A \u65f6\u6307\u4ee4\u6761\u6570\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u6b64\u65f6\u6211\u4eec\u5728\u8fdb\u4e00\u6b65\u63a8\u6d4b\u6b63\u786e\u7684 flag \u7b2c\u4e00\u4f4d\u5373\u4e3a A \u518d\u5199\u4e00\u4e2a\u811a\u672c\u9010\u4f4d\u7206\u7834 NDH2k13 - crackme - 500 [ master \u25cf ] cat guessPWD . py #!/usr/bin/env python # -*- coding: utf-8 -*- from subprocess import Popen , PIPE from sys import argv import string import pdb pinPath = \"/home/m4x/pin-3.6-gcc-linux/pin\" pinInit = lambda tool , elf : Popen ([ pinPath , '-t' , tool , '--' , elf ], stdin = PIPE , stdout = PIPE ) pinWrite = lambda cont : pin . stdin . write ( cont ) pinRead = lambda : pin . communicate ()[ 0 ] if __name__ == \"__main__\" : last = 0 # dic = map(chr, xrange(0x20, 0x80)) dic = string . ascii_letters + string . digits + \"+_ \" pwd = '?' * 8 dicIdx = 0 pwdIdx = 0 while True : pwd = pwd [: pwdIdx ] + dic [ dicIdx ] + pwd [ pwdIdx + 1 : ] # pdb.set_trace() pin = pinInit ( \"./myInscount1.so\" , \"./crackme\" ) pinWrite ( pwd + ' \\n ' ) now = int ( pinRead () . split ( \"Count: \" )[ 1 ]) print \"input( {} ) -> now( {} ) -> delta( {} )\" . format ( pwd , now , now - last ) if now - last > 2000 and dicIdx : pwdIdx += 1 dicIdx = - 1 last = 0 if pwdIdx >= len ( pwd ): print \"Found pwd: {} \" . format ( pwd ) break dicIdx += 1 last = now \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b NDH2k13-crackme-500 [ master\u25cf ] time python guessPWD.py input ( a??????? ) -> now ( 182804 ) -> delta ( 182804 ) input ( b??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( c??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( d??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( e??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( f??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( g??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( h??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( i??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( j??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( k??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( l??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( m??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( n??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( o??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( p??????? ) -> now ( 182804 ) -> delta ( 0 ) input ( q??????? ) -> now ( 182804 ) -> delta ( 0 ) ...... input ( AzI0wBsO ) -> now ( 211070 ) -> delta ( 0 ) input ( AzI0wBsP ) -> now ( 211069 ) -> delta ( -1 ) input ( AzI0wBsQ ) -> now ( 211069 ) -> delta ( 0 ) input ( AzI0wBsR ) -> now ( 211069 ) -> delta ( 0 ) input ( AzI0wBsS ) -> now ( 211069 ) -> delta ( 0 ) input ( AzI0wBsT ) -> now ( 211069 ) -> delta ( 0 ) input ( AzI0wBsU ) -> now ( 211069 ) -> delta ( 0 ) input ( AzI0wBsV ) -> now ( 211069 ) -> delta ( 0 ) input ( AzI0wBsW ) -> now ( 211069 ) -> delta ( 0 ) input ( AzI0wBsX ) -> now ( 214976 ) -> delta ( 3907 ) Found pwd: AzI0wBsX python guessPWD.py 31 .04s user 14 .72s system 105 % cpu 43 .341 total \u9a8c\u8bc1\u4e00\u4e0b NDH2k13-crackme-500 [ master\u25cf ] ./crackme Jonathan Salwan loves you < 3 ---------------------------- Password: AzI0wBsX Good password \u8fd9\u6837\uff0c\u6211\u4eec\u7528\u4e0d\u5230 5 \u5206\u949f\u7684\u65f6\u95f4\u5c31\u731c\u51fa\u4e86 flag inscount1(BB\u7ea7\u63d2\u6869) \u4e0e inscount0(ins\u7ea7\u63d2\u6869) \u6548\u679c\u76f8\u540c\uff0c\u4f46 inscount1 \u901f\u5ea6\u66f4\u5feb\uff0c\u5b9e\u9645\u89e3\u9898\u65f6\u53ef\u4ee5\u7528 inscount1 \u4ee3\u66ff inscount0","title":"NDH2K13-crackme-500"},{"location":"binary-core-tools/instrumentation/intel_pin/#hxpctf-2017-main_strip","text":"\u518d\u4ee5 hxpCTF2017 \u7684\u4e00\u9053\u9898\u76ee\u6f14\u793a\u6539\u9020 pintool \u7528\u4e8e\u89e3\u9898\uff0c\u6211\u4eec\u7740\u91cd\u6f14\u793a\u6539\u9020 pintool \u7684\u6b65\u9aa4\uff0c\u56e0\u6b64\u6062\u590d\u7b26\u53f7\u8868\u548c\u5206\u6790\u7a0b\u5e8f\u6d41\u7a0b\u7684\u90e8\u5206\u53ef\u4ee5\u53c2\u8003\u8fd9\u7bc7 writeup \u6211\u4eec\u5148\u5c1d\u8bd5\u7528\u4e0a\u4f8b\u7684\u65b9\u6cd5\u89e3\u8fd9\u9053\u9898\u76ee hxpCTF-2017-main_strip [ master\u25cf\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount1.so -- ./main_strip a Nope. Count: 517715 hxpCTF-2017-main_strip [ master\u25cf\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount1.so -- ./main_strip a Nope. Count: 545828 hxpCTF-2017-main_strip [ master\u25cf\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount1.so -- ./main_strip a Nope. Count: 532656 hxpCTF-2017-main_strip [ master\u25cf\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount1.so -- ./main_strip a Nope. Count: 524544 hxpCTF-2017-main_strip [ master\u25cf\u25cf ] ~/pin-3.6-gcc-linux/pin -t ./myInscount1.so -- ./main_strip a Nope. Count: 582401 \u5f88\u4e0d\u5e78\uff0c\u5373\u4f7f\u6211\u4eec\u4f7f\u7528\u540c\u4e00\u4e2a\u8f93\u5165\uff0c\u6307\u4ee4\u6570\u4e5f\u662f\u6709\u8f83\u5927\u53d8\u5316\u7684\uff0c\u4f7f\u7528\u73b0\u6709\u7684 pintool \u96be\u4ee5\u89e3\u51fa\u8fd9\u9053\u9898\u76ee\uff0c\u6211\u4eec\u8fdb\u884c\u66f4\u6df1\u4e00\u6b65\u7684\u5206\u6790\uff0c\u9a8c\u8bc1 flag \u7684\u5173\u952e\u90e8\u5206\u53ef\u4ee5\u8868\u793a\u4e3a\u5982\u4e0b\u4ee3\u7801 for ( int i = 0 ; i < length ( provided_flag ); i ++ ) { if ( main_mapanic ( provided_flag [ i ]) != constant_binary_blob [ i ]) { bad_boy (); exit (); } goodboy (); } \u53ef\u4ee5\u770b\u51fa\u5224\u65ad\u76f8\u7b49\u662f\u9010\u4f4d\u8fdb\u884c\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u8003\u8651\u5bf9 inscount0 \u7684 docount \u51fd\u6570\u505a\u5982\u4e0b\u66f4\u6539 \u66f4\u6539\u524d\uff1a VOID docount () { icount ++ ; } \u66f4\u6539\u540e\uff1a VOID docount ( void * ip ) { // .text:000000000047B96E cmp al, cl; cmp mapanic(provided_flag[i]), constant_binary_blob[i] if (( long long int ) ip == 0x000000000047B96E ) icount ++ ; } \u53ea\u6709\u8fd0\u884c\u5230 0x47B96E \u4e00\u53e5\u624d\u4f1a\u8ba1\u6570\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e pintool \u7684\u7ed3\u679c\u6765\u9010\u4f4d\u7206\u7834 flag \u4e86 \u7136\u800c\uff0c\u56e0\u4e3a\u8be5\u9898\u76ee\u7684\u6307\u4ee4\u8f83\u591a\uff0c\u6307\u4ee4\u7ea7\u522b\u7684\u63d2\u6869\u4f1a\u8017\u8d39\u8f83\u957f\u65f6\u95f4\uff0c\u9700\u89811h\u5de6\u53f3\u624d\u80fd\u5f97\u5230 flag","title":"hxpCTF-2017-main_strip"},{"location":"binary-core-tools/instrumentation/intel_pin/#_1","text":"xman2018\u9009\u62d4\u8d5b-ollvm","title":"\u9898\u76ee"},{"location":"binary-core-tools/instrumentation/intel_pin/#_2","text":"\u4f7f\u7528 intel pin \u53ef\u4ee5\u89e3\u4e00\u90e8\u5206 CTF challenges\uff0c\u5c24\u5176\u662f\u865a\u62df\u673a\u6216\u8005\u6df7\u6dc6\u4e25\u91cd\u7684\u9006\u5411\u9898\u76ee\uff0c\u4f46 pin \u7684\u7528\u9014\u7edd\u4e0d\u5c40\u9650\u4e8e\u6c42\u89e3 CTF challenges \u4f7f\u7528 pin \u53ef\u4ee5\u89e3\u4e00\u90e8\u5206 CTF \u9898\u76ee\uff0c\u4f46\u4e5f\u4ec5\u4ec5\u662f\u4e00\u90e8\u5206\u9898\u76ee\uff0c\u591a\u6570\u9898\u76ee\u7531\u4e8e\u63d2\u6869\u4ee3\u4ef7\u5927\uff0c\u96be\u4ee5\u63d0\u53d6\u4fa7\u4fe1\u9053\u4fe1\u606f\uff0cpintool \u96be\u4ee5\u7f16\u5199\u7b49\u539f\u56e0\u4f7f\u7528 pin \u6c42\u89e3\u5f97\u4e0d\u507f\u5931\uff0c\u56e0\u6b64\u4f7f\u7528 pin \u6c42\u89e3 CTF challenges \u53ef\u4ee5\u603b\u7ed3\u4e3a\u4e0b\u6761\u539f\u5219\uff1a \u80fd\u7528\u8840\u8d5a\uff0c\u51c9\u4e86\u4e0d\u4e8f","title":"\u603b\u7ed3"},{"location":"binary-core-tools/instrumentation/intel_pin/#reference","text":"http://shell-storm.org/blog/A-binary-analysis-count-me-if-you-can/ http://brieflyx.me/2017/binary-analysis/intel-pin-intro/ http://eternal.red/2017/dont_panic-writeup/ https://github.com/0x01f/pin-in-CTF","title":"Reference"},{"location":"binary-core-tools/virtualization/qemu/qemu-install-and-debug/","text":"\u5b89\u88c5 qemu \u00b6 \u4f7f\u7528\u5305\u7ba1\u7406 \u00b6 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5982\u65e0\u7279\u6b8a\u9700\u8981\uff08\u5982\u4e3a\u4e86\u8fd0\u884c\u67d0\u4e2a CTF \u6bd4\u8d5b\u4e2d\u7684\u5f02\u67b6\u6784\u7a0b\u5e8f\u6216\u8005 kernel\uff09\u76f4\u63a5\u4f7f\u7528\u5bf9\u5e94\u7684\u5305\u7ba1\u7406\u76f4\u63a5\u5b89\u88c5\u5373\u53ef Arch: pacman -S qemu Debian/Ubuntu: apt-get install qemu Fedora: dnf install @virtualization Gentoo: emerge --ask app-emulation/qemu RHEL/CentOS: yum install qemu-kvm SUSE: zypper install qemu \u8fd9\u91cc\u53ea\u8bf4\u660e\u5728 linux \u4e0b\u7684\u5b89\u88c5\u8fc7\u7a0b\uff0c\u5176\u4ed6\u7cfb\u7edf\u7684\u5b89\u88c5\u8fc7\u7a0b\u8bf7\u53c2\u8003 \u5b98\u65b9\u7f51\u7ad9 \u4ece\u6e90\u7801\u7f16\u8bd1 \u00b6 \u901a\u8fc7\u5305\u7ba1\u7406\u5b89\u88c5\u7684 qemu \u7248\u672c\u4e00\u822c\u8f83\u8001\uff0c\u5982\u679c\u9700\u8981\u65b0\u7248\u7684 qemu\uff0c\u53ef\u4ee5\u4ece\u6e90\u7801\u7f16\u8bd1\uff0c\u8fd9\u91cc\u4ee5\u7f16\u8bd1\u6700\u65b0\u7248\u7684 qemu \u4e3a\u4f8b\u3002 wget https://download.qemu.org/qemu-3.1.0-rc3.tar.xz tar xvJf qemu-3.1.0-rc3.tar.xz cd qemu-3.1.0-rc3 \u901a\u8fc7 ./configure --help \u7684\u67e5\u770b\u7f16\u8bd1\u65f6\u7684\u9009\u9879\uff0c --target-list \u9009\u9879\u4e3a\u53ef\u9009\u7684\u6a21\u62df\u5668\uff0c\u9ed8\u8ba4\u5168\u9009 --target-list \u4e2d\u7684 xxx-soft \u548c xxx-linux-user \u5206\u522b\u6307\u7cfb\u7edf\u6a21\u62df\u5668\u548c\u5e94\u7528\u7a0b\u5e8f\u6a21\u62df\u5668, \u751f\u6210\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u540d\u5b57\u4e3a qemu-system-xxx \u548c qemu-xxx \u8fd9\u91cc\u76f4\u63a5\u4f7f\u7528\u9ed8\u8ba4\u9009\u9879\u8fdb\u884c\u7f16\u8bd1 ./configure make -j8 \u7ee7\u7eed\u5b89\u88c5 sudo make install \u6210\u529f\u5b89\u88c5 ~ qemu-arm --version qemu-arm version 3 .0.93 Copyright ( c ) 2003 -2018 Fabrice Bellard and the QEMU Project developers \u4f7f\u7528 qemu \u00b6 \u4ee5 CISCN 2017 \u7684 babydriver \u4e3e\u4f8b\uff0c\u67e5\u770b\u542f\u52a8\u811a\u672c CISCN2017_babydriver [ master\u25cf ] bat boot.sh \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 File: boot.sh \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 1 \u2502 #!/bin/bash 2 \u2502 3 \u2502 qemu-system-x86_64 -initrd rootfs.cpio -kernel bzImage -append 'console=ttyS0 root=/dev/ram oops=panic panic=1' -enable-kvm -monitor /dev/null -m 64M - \u2502 -nographic -smp cores = 1 ,threads = 1 -cpu kvm64,+smep \u53ef\u4ee5\u770b\u51fa\u8fd9\u9053\u9898\u76ee\u662f\u7528 qemu-system-x86_64 \u542f\u52a8\u4e86\u4ee5 rootfs.cpio \u4e3a\u6587\u4ef6\u7cfb\u7edf\u7684 kernel bzImage \uff0c\u542f\u52a8\u65f6\u7684\u53c2\u6570\u4e3a console=ttyS0 ... panic=1 \uff0c\u4e3a\u8fd9\u4e2a\u8fdb\u7a0b\u5206\u914d 64M \u5185\u5b58\u3002 \u66f4\u591a\u53c2\u6570\u7684\u542b\u4e49\u8bf7\u901a\u8fc7 -h \u6216\u8005 qemu-doc \u67e5\u770b\u3002 \u5982\u679c\u4f7f\u7528\u5305\u7ba1\u7406\u5b89\u88c5 qemu\uff0c\u76f4\u63a5\u5b89\u88c5 qemu-system-x86_64 \u5373\u53ef sudo apt install qemu-system_x86-64 \u56e0\u4e3a\u4f7f\u7528\u4e86 kvm\uff0c\u6240\u4ee5\u542f\u52a8\u65f6\u8981\u7528 root \u6743\u9650\u542f\u52a8 CISCN2017_babydriver [ master\u25cf ] sudo ./boot.sh ...... ...... / $ id uid = 1000 ( ctf ) gid = 1000 ( ctf ) groups = 1000 ( ctf ) / $ ls bin etc init linuxrc root sys usr dev home lib proc sbin tmp \u8fd9\u9053\u9898\u76ee\u7684\u66f4\u591a\u5206\u6790\u53ef\u4ee5\u770b link \u540c\u6837\uff0c\u518d\u770b\u4e0b Codegate 2018 \u7684 Melong Codegate2018_Melong [ master ] check melong + file melong melong: ELF 32 -bit LSB executable, ARM, EABI5 version 1 ( SYSV ) , dynamically linked, interpreter /lib/ld-linux.so.3, for GNU/Linux 3 .2.0, BuildID [ sha1 ]= 2c55e75a072020303e7c802d32a5b82432f329e9, not stripped + checksec melong [ * ] '/home/m4x/Projects/pwn_repo/Codegate2018_Melong/melong' Arch: arm-32-little RELRO: Partial RELRO Stack: No canary found NX: NX enabled PIE: No PIE ( 0x10000 ) \u53ef\u4ee5\u770b\u51fa\u662f 32 \u4f4d \u7684 arm \u7a0b\u5e8f\uff0c\u9700\u8981\u5b89\u88c5 qemu-arm \u5982\u679c\u4f7f\u7528\u5305\u7ba1\u7406\u5b89\u88c5\uff0c\u5219 $ sudo apt-get install qemu-user $ sudo apt-get install qemu-use-binfmt qemu-user-binfmt:i386 \u8fd9\u6837\u5c31\u5b89\u88c5\u4e86 qemu-arm \u4f46\u540c\u65f6\u56e0\u4e3a\u7a0b\u5e8f\u662f\u52a8\u6001\u94fe\u63a5\u7684\uff0c\u8fd8\u9700\u8981\u540c\u65f6\u5b89\u88c5\u5bf9\u5e94\u7684 libc\uff0c\u53ef\u4ee5\u4f7f\u7528 apt search \"libc6-\" | grep \"ARCH\" \u641c\u7d22\uff0c\u5982 Codegate2018_Melong [ master ] apt search \"libc6-\" | grep arm p libc6-arm64-cross - GNU C Library: Shared libraries ( for cross-compiling ) v libc6-arm64-dcv1 - v libc6-armel-armel-cross - p libc6-armel-armhf-cross - Dummy package to get libc6:armel installed p libc6-armel-cross - GNU C Library: Shared libraries ( for cross-compiling ) v libc6-armel-dcv1 - p libc6-armhf-armel-cross - Dummy package to get libc6:armhf installed v libc6-armhf-armhf-cross - p libc6-armhf-cross - GNU C Library: Shared libraries ( for cross-compiling ) v libc6-armhf-dcv1 - p libc6-dbg-arm64-cross - GNU C Library: detached debugging symbols ( for cross-compiling ) v libc6-dbg-arm64-dcv1 - p libc6-dbg-armel-cross - GNU C Library: detached debugging symbols ( for cross-compiling ) v libc6-dbg-armel-dcv1 - p libc6-dbg-armhf-cross - GNU C Library: detached debugging symbols ( for cross-compiling ) v libc6-dbg-armhf-dcv1 - p libc6-dev-arm64-cross - GNU C Library: Development Libraries and Header Files ( for cross-compiling ) v libc6-dev-arm64-cross:i386 - v libc6-dev-arm64-dcv1 - v libc6-dev-armel-armel-cross - p libc6-dev-armel-armhf-cross - Dummy package to get libc6-dev:armel installed p libc6-dev-armel-cross - GNU C Library: Development Libraries and Header Files ( for cross-compiling ) v libc6-dev-armel-cross:i386 - v libc6-dev-armel-dcv1 - p libc6-dev-armhf-armel-cross - Dummy package to get libc6-dev:armhf installed v libc6-dev-armhf-armhf-cross - p libc6-dev-armhf-cross - GNU C Library: Development Libraries and Header Files ( for cross-compiling ) v libc6-dev-armhf-cross:i386 - v libc6-dev-armhf-dcv1 - \u53ea\u9700\u8981\u5b89\u88c5 libc6-ARCH-cross \u7684\u5305\u5373\u53ef\u3002 \u88c5\u597d\u540e\u4f7f\u7528 -L \u6307\u5b9a\u5171\u4eab\u5e93\u8def\u5f84\u5373\u53ef\u8fd0\u884c\u6587\u4ef6\u3002 $ qemu-arm -L /usr/arm-linux-gnueabi ./melong \u8fd9\u9053\u9898\u76ee\u7684\u66f4\u591a\u5206\u6790\u53ef\u4ee5\u770b link \u5982\u679c\u662f\u9759\u6001\u7684\u7a0b\u5e8f\uff0c\u4e0d\u9700\u8981 libc\uff0c\u5219\u53ef\u4ee5\u4e0d\u7528 -L \u9009\u9879\uff0c\u5982 Jarvis-OJ \u7684 typo jarvisOJ_typo [ master ] check ./typo + file ./typo ./typo: ELF 32 -bit LSB executable, ARM, EABI5 version 1 ( SYSV ) , statically linked, for GNU/Linux 2 .6.32, BuildID [ sha1 ]= 211877f58b5a0e8774b8a3a72c83890f8cd38e63, stripped + checksec ./typo [ * ] '/home/m4x/Projects/pwn_repo/jarvisOJ_typo/typo' Arch: arm-32-little RELRO: Partial RELRO Stack: No canary found NX: NX enabled PIE: No PIE ( 0x8000 ) jarvisOJ_typo [ master ] qemu-arm ./typo Let ' s Do Some Typing Exercise~ Press Enter to get start ; Input ~ if you want to quit ^C \u5982\u4f55 debug \u00b6 \u5206\u4e24\u79cd\u60c5\u51b5 \u8c03\u8bd5 qemu \u8fd9\u4e2a\u8fdb\u7a0b \u8c03\u8bd5 qemu \u5185\u8fd0\u884c\u7684\u7a0b\u5e8f \u8c03\u8bd5 qemu \u00b6 \u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u76f4\u63a5\u4f7f\u7528 gdb attach \u5230 qemu \u7684\u8fdb\u7a0b\u53f7\u5373\u53ef\uff0c\u4e3a\u4e86\u8c03\u8bd5\u65f6\u65b9\u4fbf\u53ef\u4ee5\u5728\u7f16\u8bd1\u65f6\u52a0\u4e0a --enable-debug \u9009\u9879\u4ee5\u4fdd\u7559\u7b26\u53f7\u7b49\u4fe1\u606f\u3002 --enable-debug enable common debug build options \u5728\u4e4b\u540e\u7684 qemu \u9003\u9038\u4e2d\u4f1a\u7740\u91cd\u4ecb\u7ecd\u8fd9\u4e2a\u8fc7\u7a0b\u3002 \u8c03\u8bd5 qemu \u4e2d\u7684\u8fdb\u7a0b \u00b6 qemu \u63d0\u4f9b\u4e86 gdb \u7684\u63a5\u53e3\uff0c\u901a\u8fc7 -g \u6307\u5b9a\u7aef\u53e3\u6765\u8c03\u7528 -g port QEMU_GDB wait gdb connection to 'port' \u540c\u65f6\u4e3a\u4e86\u8c03\u8bd5\u5f02\u67b6\u6784\u7684\u7a0b\u5e8f\uff0c\u9700\u8981\u5b89\u88c5 gdb-multiarch sudo apt install gdb-multiarch \u4f8b\u5982 Melong \u4e2d\uff0c\u4f7f\u7528 $ qemu-arm -g 1234 -L /usr/arm-linux-gnueabi ./melong \u542f\u52a8\u7a0b\u5e8f\uff0c\u5728\u53e6\u4e00\u4e2a shell \u4e2d\u4f7f\u7528 gdb-multiarch \u542f\u52a8\u7a0b\u5e8f\u5e76\u8fde\u63a5\u5230\u6307\u5b9a\u7684\u7aef\u53e3\u5373\u53ef\u8c03\u8bd5 Codegate2018_Melong [ master ] gdb-multiarch ./melong -q pwndbg: loaded 175 commands. Type pwndbg [ filter ] for a list. pwndbg: created $rebase , $ida gdb functions ( can be used with print/break ) Reading symbols from ./melong... ( no debugging symbols found ) ...done. pwndbg> target remote localhost:1234 \u4f7f\u7528 gdb-multriarch \u53ef\u4ee5\u8c03\u8bd5\u5927\u591a\u6570\u7684\u7a0b\u5e8f\u3002 \u4f46\u4e5f\u6709\u90e8\u5206\u7a0b\u5e8f\u4e0d\u80fd\u4f7f\u7528 gdb-multiarch\uff0c\u8fd9\u65f6\u53ef\u4ee5\u7f16\u8bd1\u5bf9\u5e94\u67b6\u6784\u7684 Toolchain\uff0c\u5982 arm-none-eabi-gdb \u6216\u8005\u4f7f\u7528\u7cfb\u7edf\u6a21\u5f0f\u7684 qemu \u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u67b6\u6784\u7684\u865a\u62df\u673a\uff0c\u6587\u672b\u653e\u4e86\u4e00\u7247\u94fe\u63a5\uff0c\u4ee5\u540e\u4e5f\u4f1a\u4ecb\u7ecd\u8fd9\u79cd\u65b9\u6cd5\u3002 \u7279\u522b\u7684\u662f\u7cfb\u7edf\u6a21\u5f0f\u7684 qemu \u8fd8\u63d0\u4f9b\u4e86\u53e6\u5916\u51e0\u4e2a\u53c2\u6570 -gdb dev wait for gdb connection on 'dev' -s shorthand for -gdb tcp::1234 -S freeze CPU at startup (use 'c' to start execution) -gdb \u4f5c\u7528\u7c7b\u4f3c -g \uff0c\u4f7f\u7528 -gdb tcp::1234 \u5373\u53ef\u5728 gdb \u4e2d\u901a\u8fc7 1234 \u7aef\u53e3\u8c03\u8bd5\u3002 -s \u662f -gdb tcp::1234 \u7684\u7f29\u5199 -S \u8ba9\u865a\u62df\u673a\u505c\u5728\u542f\u52a8\u7684\u5730\u65b9\u65b9\u4fbf\u8c03\u8bd5\uff0c\u7c7b\u4f3c\u4e8e pwntools \u7684 gdb.debug() References \u00b6 https://www.ringzerolabs.com/2018/03/the-wonderful-world-of-mips.html","title":"qemu \u5b89\u88c5\u4e0e\u8c03\u8bd5"},{"location":"binary-core-tools/virtualization/qemu/qemu-install-and-debug/#qemu","text":"","title":"\u5b89\u88c5 qemu"},{"location":"binary-core-tools/virtualization/qemu/qemu-install-and-debug/#_1","text":"\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5982\u65e0\u7279\u6b8a\u9700\u8981\uff08\u5982\u4e3a\u4e86\u8fd0\u884c\u67d0\u4e2a CTF \u6bd4\u8d5b\u4e2d\u7684\u5f02\u67b6\u6784\u7a0b\u5e8f\u6216\u8005 kernel\uff09\u76f4\u63a5\u4f7f\u7528\u5bf9\u5e94\u7684\u5305\u7ba1\u7406\u76f4\u63a5\u5b89\u88c5\u5373\u53ef Arch: pacman -S qemu Debian/Ubuntu: apt-get install qemu Fedora: dnf install @virtualization Gentoo: emerge --ask app-emulation/qemu RHEL/CentOS: yum install qemu-kvm SUSE: zypper install qemu \u8fd9\u91cc\u53ea\u8bf4\u660e\u5728 linux \u4e0b\u7684\u5b89\u88c5\u8fc7\u7a0b\uff0c\u5176\u4ed6\u7cfb\u7edf\u7684\u5b89\u88c5\u8fc7\u7a0b\u8bf7\u53c2\u8003 \u5b98\u65b9\u7f51\u7ad9","title":"\u4f7f\u7528\u5305\u7ba1\u7406"},{"location":"binary-core-tools/virtualization/qemu/qemu-install-and-debug/#_2","text":"\u901a\u8fc7\u5305\u7ba1\u7406\u5b89\u88c5\u7684 qemu \u7248\u672c\u4e00\u822c\u8f83\u8001\uff0c\u5982\u679c\u9700\u8981\u65b0\u7248\u7684 qemu\uff0c\u53ef\u4ee5\u4ece\u6e90\u7801\u7f16\u8bd1\uff0c\u8fd9\u91cc\u4ee5\u7f16\u8bd1\u6700\u65b0\u7248\u7684 qemu \u4e3a\u4f8b\u3002 wget https://download.qemu.org/qemu-3.1.0-rc3.tar.xz tar xvJf qemu-3.1.0-rc3.tar.xz cd qemu-3.1.0-rc3 \u901a\u8fc7 ./configure --help \u7684\u67e5\u770b\u7f16\u8bd1\u65f6\u7684\u9009\u9879\uff0c --target-list \u9009\u9879\u4e3a\u53ef\u9009\u7684\u6a21\u62df\u5668\uff0c\u9ed8\u8ba4\u5168\u9009 --target-list \u4e2d\u7684 xxx-soft \u548c xxx-linux-user \u5206\u522b\u6307\u7cfb\u7edf\u6a21\u62df\u5668\u548c\u5e94\u7528\u7a0b\u5e8f\u6a21\u62df\u5668, \u751f\u6210\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u540d\u5b57\u4e3a qemu-system-xxx \u548c qemu-xxx \u8fd9\u91cc\u76f4\u63a5\u4f7f\u7528\u9ed8\u8ba4\u9009\u9879\u8fdb\u884c\u7f16\u8bd1 ./configure make -j8 \u7ee7\u7eed\u5b89\u88c5 sudo make install \u6210\u529f\u5b89\u88c5 ~ qemu-arm --version qemu-arm version 3 .0.93 Copyright ( c ) 2003 -2018 Fabrice Bellard and the QEMU Project developers","title":"\u4ece\u6e90\u7801\u7f16\u8bd1"},{"location":"binary-core-tools/virtualization/qemu/qemu-install-and-debug/#qemu_1","text":"\u4ee5 CISCN 2017 \u7684 babydriver \u4e3e\u4f8b\uff0c\u67e5\u770b\u542f\u52a8\u811a\u672c CISCN2017_babydriver [ master\u25cf ] bat boot.sh \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 \u2502 File: boot.sh \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 1 \u2502 #!/bin/bash 2 \u2502 3 \u2502 qemu-system-x86_64 -initrd rootfs.cpio -kernel bzImage -append 'console=ttyS0 root=/dev/ram oops=panic panic=1' -enable-kvm -monitor /dev/null -m 64M - \u2502 -nographic -smp cores = 1 ,threads = 1 -cpu kvm64,+smep \u53ef\u4ee5\u770b\u51fa\u8fd9\u9053\u9898\u76ee\u662f\u7528 qemu-system-x86_64 \u542f\u52a8\u4e86\u4ee5 rootfs.cpio \u4e3a\u6587\u4ef6\u7cfb\u7edf\u7684 kernel bzImage \uff0c\u542f\u52a8\u65f6\u7684\u53c2\u6570\u4e3a console=ttyS0 ... panic=1 \uff0c\u4e3a\u8fd9\u4e2a\u8fdb\u7a0b\u5206\u914d 64M \u5185\u5b58\u3002 \u66f4\u591a\u53c2\u6570\u7684\u542b\u4e49\u8bf7\u901a\u8fc7 -h \u6216\u8005 qemu-doc \u67e5\u770b\u3002 \u5982\u679c\u4f7f\u7528\u5305\u7ba1\u7406\u5b89\u88c5 qemu\uff0c\u76f4\u63a5\u5b89\u88c5 qemu-system-x86_64 \u5373\u53ef sudo apt install qemu-system_x86-64 \u56e0\u4e3a\u4f7f\u7528\u4e86 kvm\uff0c\u6240\u4ee5\u542f\u52a8\u65f6\u8981\u7528 root \u6743\u9650\u542f\u52a8 CISCN2017_babydriver [ master\u25cf ] sudo ./boot.sh ...... ...... / $ id uid = 1000 ( ctf ) gid = 1000 ( ctf ) groups = 1000 ( ctf ) / $ ls bin etc init linuxrc root sys usr dev home lib proc sbin tmp \u8fd9\u9053\u9898\u76ee\u7684\u66f4\u591a\u5206\u6790\u53ef\u4ee5\u770b link \u540c\u6837\uff0c\u518d\u770b\u4e0b Codegate 2018 \u7684 Melong Codegate2018_Melong [ master ] check melong + file melong melong: ELF 32 -bit LSB executable, ARM, EABI5 version 1 ( SYSV ) , dynamically linked, interpreter /lib/ld-linux.so.3, for GNU/Linux 3 .2.0, BuildID [ sha1 ]= 2c55e75a072020303e7c802d32a5b82432f329e9, not stripped + checksec melong [ * ] '/home/m4x/Projects/pwn_repo/Codegate2018_Melong/melong' Arch: arm-32-little RELRO: Partial RELRO Stack: No canary found NX: NX enabled PIE: No PIE ( 0x10000 ) \u53ef\u4ee5\u770b\u51fa\u662f 32 \u4f4d \u7684 arm \u7a0b\u5e8f\uff0c\u9700\u8981\u5b89\u88c5 qemu-arm \u5982\u679c\u4f7f\u7528\u5305\u7ba1\u7406\u5b89\u88c5\uff0c\u5219 $ sudo apt-get install qemu-user $ sudo apt-get install qemu-use-binfmt qemu-user-binfmt:i386 \u8fd9\u6837\u5c31\u5b89\u88c5\u4e86 qemu-arm \u4f46\u540c\u65f6\u56e0\u4e3a\u7a0b\u5e8f\u662f\u52a8\u6001\u94fe\u63a5\u7684\uff0c\u8fd8\u9700\u8981\u540c\u65f6\u5b89\u88c5\u5bf9\u5e94\u7684 libc\uff0c\u53ef\u4ee5\u4f7f\u7528 apt search \"libc6-\" | grep \"ARCH\" \u641c\u7d22\uff0c\u5982 Codegate2018_Melong [ master ] apt search \"libc6-\" | grep arm p libc6-arm64-cross - GNU C Library: Shared libraries ( for cross-compiling ) v libc6-arm64-dcv1 - v libc6-armel-armel-cross - p libc6-armel-armhf-cross - Dummy package to get libc6:armel installed p libc6-armel-cross - GNU C Library: Shared libraries ( for cross-compiling ) v libc6-armel-dcv1 - p libc6-armhf-armel-cross - Dummy package to get libc6:armhf installed v libc6-armhf-armhf-cross - p libc6-armhf-cross - GNU C Library: Shared libraries ( for cross-compiling ) v libc6-armhf-dcv1 - p libc6-dbg-arm64-cross - GNU C Library: detached debugging symbols ( for cross-compiling ) v libc6-dbg-arm64-dcv1 - p libc6-dbg-armel-cross - GNU C Library: detached debugging symbols ( for cross-compiling ) v libc6-dbg-armel-dcv1 - p libc6-dbg-armhf-cross - GNU C Library: detached debugging symbols ( for cross-compiling ) v libc6-dbg-armhf-dcv1 - p libc6-dev-arm64-cross - GNU C Library: Development Libraries and Header Files ( for cross-compiling ) v libc6-dev-arm64-cross:i386 - v libc6-dev-arm64-dcv1 - v libc6-dev-armel-armel-cross - p libc6-dev-armel-armhf-cross - Dummy package to get libc6-dev:armel installed p libc6-dev-armel-cross - GNU C Library: Development Libraries and Header Files ( for cross-compiling ) v libc6-dev-armel-cross:i386 - v libc6-dev-armel-dcv1 - p libc6-dev-armhf-armel-cross - Dummy package to get libc6-dev:armhf installed v libc6-dev-armhf-armhf-cross - p libc6-dev-armhf-cross - GNU C Library: Development Libraries and Header Files ( for cross-compiling ) v libc6-dev-armhf-cross:i386 - v libc6-dev-armhf-dcv1 - \u53ea\u9700\u8981\u5b89\u88c5 libc6-ARCH-cross \u7684\u5305\u5373\u53ef\u3002 \u88c5\u597d\u540e\u4f7f\u7528 -L \u6307\u5b9a\u5171\u4eab\u5e93\u8def\u5f84\u5373\u53ef\u8fd0\u884c\u6587\u4ef6\u3002 $ qemu-arm -L /usr/arm-linux-gnueabi ./melong \u8fd9\u9053\u9898\u76ee\u7684\u66f4\u591a\u5206\u6790\u53ef\u4ee5\u770b link \u5982\u679c\u662f\u9759\u6001\u7684\u7a0b\u5e8f\uff0c\u4e0d\u9700\u8981 libc\uff0c\u5219\u53ef\u4ee5\u4e0d\u7528 -L \u9009\u9879\uff0c\u5982 Jarvis-OJ \u7684 typo jarvisOJ_typo [ master ] check ./typo + file ./typo ./typo: ELF 32 -bit LSB executable, ARM, EABI5 version 1 ( SYSV ) , statically linked, for GNU/Linux 2 .6.32, BuildID [ sha1 ]= 211877f58b5a0e8774b8a3a72c83890f8cd38e63, stripped + checksec ./typo [ * ] '/home/m4x/Projects/pwn_repo/jarvisOJ_typo/typo' Arch: arm-32-little RELRO: Partial RELRO Stack: No canary found NX: NX enabled PIE: No PIE ( 0x8000 ) jarvisOJ_typo [ master ] qemu-arm ./typo Let ' s Do Some Typing Exercise~ Press Enter to get start ; Input ~ if you want to quit ^C","title":"\u4f7f\u7528 qemu"},{"location":"binary-core-tools/virtualization/qemu/qemu-install-and-debug/#debug","text":"\u5206\u4e24\u79cd\u60c5\u51b5 \u8c03\u8bd5 qemu \u8fd9\u4e2a\u8fdb\u7a0b \u8c03\u8bd5 qemu \u5185\u8fd0\u884c\u7684\u7a0b\u5e8f","title":"\u5982\u4f55 debug"},{"location":"binary-core-tools/virtualization/qemu/qemu-install-and-debug/#qemu_2","text":"\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u76f4\u63a5\u4f7f\u7528 gdb attach \u5230 qemu \u7684\u8fdb\u7a0b\u53f7\u5373\u53ef\uff0c\u4e3a\u4e86\u8c03\u8bd5\u65f6\u65b9\u4fbf\u53ef\u4ee5\u5728\u7f16\u8bd1\u65f6\u52a0\u4e0a --enable-debug \u9009\u9879\u4ee5\u4fdd\u7559\u7b26\u53f7\u7b49\u4fe1\u606f\u3002 --enable-debug enable common debug build options \u5728\u4e4b\u540e\u7684 qemu \u9003\u9038\u4e2d\u4f1a\u7740\u91cd\u4ecb\u7ecd\u8fd9\u4e2a\u8fc7\u7a0b\u3002","title":"\u8c03\u8bd5 qemu"},{"location":"binary-core-tools/virtualization/qemu/qemu-install-and-debug/#qemu_3","text":"qemu \u63d0\u4f9b\u4e86 gdb \u7684\u63a5\u53e3\uff0c\u901a\u8fc7 -g \u6307\u5b9a\u7aef\u53e3\u6765\u8c03\u7528 -g port QEMU_GDB wait gdb connection to 'port' \u540c\u65f6\u4e3a\u4e86\u8c03\u8bd5\u5f02\u67b6\u6784\u7684\u7a0b\u5e8f\uff0c\u9700\u8981\u5b89\u88c5 gdb-multiarch sudo apt install gdb-multiarch \u4f8b\u5982 Melong \u4e2d\uff0c\u4f7f\u7528 $ qemu-arm -g 1234 -L /usr/arm-linux-gnueabi ./melong \u542f\u52a8\u7a0b\u5e8f\uff0c\u5728\u53e6\u4e00\u4e2a shell \u4e2d\u4f7f\u7528 gdb-multiarch \u542f\u52a8\u7a0b\u5e8f\u5e76\u8fde\u63a5\u5230\u6307\u5b9a\u7684\u7aef\u53e3\u5373\u53ef\u8c03\u8bd5 Codegate2018_Melong [ master ] gdb-multiarch ./melong -q pwndbg: loaded 175 commands. Type pwndbg [ filter ] for a list. pwndbg: created $rebase , $ida gdb functions ( can be used with print/break ) Reading symbols from ./melong... ( no debugging symbols found ) ...done. pwndbg> target remote localhost:1234 \u4f7f\u7528 gdb-multriarch \u53ef\u4ee5\u8c03\u8bd5\u5927\u591a\u6570\u7684\u7a0b\u5e8f\u3002 \u4f46\u4e5f\u6709\u90e8\u5206\u7a0b\u5e8f\u4e0d\u80fd\u4f7f\u7528 gdb-multiarch\uff0c\u8fd9\u65f6\u53ef\u4ee5\u7f16\u8bd1\u5bf9\u5e94\u67b6\u6784\u7684 Toolchain\uff0c\u5982 arm-none-eabi-gdb \u6216\u8005\u4f7f\u7528\u7cfb\u7edf\u6a21\u5f0f\u7684 qemu \u521b\u5efa\u4e00\u4e2a\u5bf9\u5e94\u67b6\u6784\u7684\u865a\u62df\u673a\uff0c\u6587\u672b\u653e\u4e86\u4e00\u7247\u94fe\u63a5\uff0c\u4ee5\u540e\u4e5f\u4f1a\u4ecb\u7ecd\u8fd9\u79cd\u65b9\u6cd5\u3002 \u7279\u522b\u7684\u662f\u7cfb\u7edf\u6a21\u5f0f\u7684 qemu \u8fd8\u63d0\u4f9b\u4e86\u53e6\u5916\u51e0\u4e2a\u53c2\u6570 -gdb dev wait for gdb connection on 'dev' -s shorthand for -gdb tcp::1234 -S freeze CPU at startup (use 'c' to start execution) -gdb \u4f5c\u7528\u7c7b\u4f3c -g \uff0c\u4f7f\u7528 -gdb tcp::1234 \u5373\u53ef\u5728 gdb \u4e2d\u901a\u8fc7 1234 \u7aef\u53e3\u8c03\u8bd5\u3002 -s \u662f -gdb tcp::1234 \u7684\u7f29\u5199 -S \u8ba9\u865a\u62df\u673a\u505c\u5728\u542f\u52a8\u7684\u5730\u65b9\u65b9\u4fbf\u8c03\u8bd5\uff0c\u7c7b\u4f3c\u4e8e pwntools \u7684 gdb.debug()","title":"\u8c03\u8bd5 qemu \u4e2d\u7684\u8fdb\u7a0b"},{"location":"binary-core-tools/virtualization/qemu/qemu-install-and-debug/#references","text":"https://www.ringzerolabs.com/2018/03/the-wonderful-world-of-mips.html","title":"References"},{"location":"binary-core-tools/virtualization/qemu/qemu-internals/","text":"\u5185\u5b58\u7ba1\u7406 \u00b6 \u8bbe\u5907\u6a21\u62df \u00b6","title":"qemu \u7ec6\u8282"},{"location":"binary-core-tools/virtualization/qemu/qemu-internals/#_1","text":"","title":"\u5185\u5b58\u7ba1\u7406"},{"location":"binary-core-tools/virtualization/qemu/qemu-internals/#_2","text":"","title":"\u8bbe\u5907\u6a21\u62df"},{"location":"binary-core-tools/virtualization/qemu/qemu-introduction/","text":"\u4ec0\u4e48\u662f qemu \u00b6 qemu \u662f\u4e00\u6b3e\u7531 Fabrice Bellard \u7b49\u4eba\u7f16\u5199\u7684\u53ef\u4ee5\u6267\u884c\u786c\u4ef6\u865a\u62df\u5316\u7684\u5f00\u6e90\u6258\u7ba1\u865a\u62df\u673a\uff0c\u5177\u6709\u8fd0\u884c\u901f\u5ea6\u5feb\uff08\u914d\u5408 kvm\uff09\uff0c\u8de8\u5e73\u53f0\u7b49\u4f18\u70b9\u3002 qemu \u901a\u8fc7\u52a8\u6001\u7684\u4e8c\u8fdb\u5236\u8f6c\u5316\u6a21\u62df CPU\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e00\u7ec4\u8bbe\u5907\u6a21\u578b\uff0c\u4f7f\u5176\u80fd\u591f\u8fd0\u884c\u591a\u79cd\u672a\u4fee\u6539\u7684\u5ba2\u6237\u673aOS\u3002 \u5728 CTF \u6bd4\u8d5b\u4e2d\uff0cqemu \u591a\u7528\u4e8e\u542f\u52a8\u5f02\u67b6\u6784\u7684\u7a0b\u5e8f\uff08mips, arm \u7b49\uff09\u3001kernel \u53ca bootloader \u7b49\u4e8c\u8fdb\u5236\u7a0b\u5e8f\uff0c\u6709\u65f6\u4e5f\u4f1a\u4f5c\u4e3a\u8981 pwn \u6389\u7684\u7a0b\u5e8f\u51fa\u73b0\u3002 \u8fd0\u884c\u6a21\u5f0f \u00b6 qemu \u6709\u591a\u79cd\u8fd0\u884c\u6a21\u5f0f\uff0c\u5e38\u7528\u7684\u6709 User-mode emulation \u548c System emulation \u4e24\u79cd\u3002 User-mode emulation \u00b6 \u7528\u6237\u6a21\u5f0f\uff0c\u5728\u8fd9\u4e2a\u6a21\u5f0f\u4e0b\uff0cqemu \u53ef\u4ee5\u8fd0\u884c\u5355\u4e2a\u5176\u4ed6\u6307\u4ee4\u96c6\u7684 linux \u6216\u8005 macOS/darwin \u7a0b\u5e8f\uff0c \u5141\u8bb8\u4e86\u4e3a\u4e00\u79cd\u67b6\u6784\u7f16\u8bd1\u7684\u7a0b\u5e8f\u5728\u53e6\u5916\u4e00\u79cd\u67b6\u6784\u4e0a\u9762\u8fd0\u884c \u3002 System emulation \u00b6 \u7cfb\u7edf\u6a21\u5f0f\uff0c\u5728\u8fd9\u4e2a\u6a21\u5f0f\u4e0b\uff0cqemu \u5c06\u6a21\u62df\u4e00\u4e2a\u5b8c\u6574\u7684\u8ba1\u7b97\u673a\u7cfb\u7edf\uff0c\u5305\u62ec\u5916\u56f4\u8bbe\u5907\u3002 \u4e4b\u540e\u5c06\u5206\u522b\u4e3a\u4e24\u79cd\u60c5\u51b5\u4e3e\u4f8b Reference \u00b6 https://wiki.qemu.org/Main_Page https://qemu.weilnetz.de/doc/qemu-doc.html https://wiki.qemu.org/Documentation https://en.wikipedia.org/wiki/QEMU","title":"qemu \u4ecb\u7ecd"},{"location":"binary-core-tools/virtualization/qemu/qemu-introduction/#qemu","text":"qemu \u662f\u4e00\u6b3e\u7531 Fabrice Bellard \u7b49\u4eba\u7f16\u5199\u7684\u53ef\u4ee5\u6267\u884c\u786c\u4ef6\u865a\u62df\u5316\u7684\u5f00\u6e90\u6258\u7ba1\u865a\u62df\u673a\uff0c\u5177\u6709\u8fd0\u884c\u901f\u5ea6\u5feb\uff08\u914d\u5408 kvm\uff09\uff0c\u8de8\u5e73\u53f0\u7b49\u4f18\u70b9\u3002 qemu \u901a\u8fc7\u52a8\u6001\u7684\u4e8c\u8fdb\u5236\u8f6c\u5316\u6a21\u62df CPU\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e00\u7ec4\u8bbe\u5907\u6a21\u578b\uff0c\u4f7f\u5176\u80fd\u591f\u8fd0\u884c\u591a\u79cd\u672a\u4fee\u6539\u7684\u5ba2\u6237\u673aOS\u3002 \u5728 CTF \u6bd4\u8d5b\u4e2d\uff0cqemu \u591a\u7528\u4e8e\u542f\u52a8\u5f02\u67b6\u6784\u7684\u7a0b\u5e8f\uff08mips, arm \u7b49\uff09\u3001kernel \u53ca bootloader \u7b49\u4e8c\u8fdb\u5236\u7a0b\u5e8f\uff0c\u6709\u65f6\u4e5f\u4f1a\u4f5c\u4e3a\u8981 pwn \u6389\u7684\u7a0b\u5e8f\u51fa\u73b0\u3002","title":"\u4ec0\u4e48\u662f qemu"},{"location":"binary-core-tools/virtualization/qemu/qemu-introduction/#_1","text":"qemu \u6709\u591a\u79cd\u8fd0\u884c\u6a21\u5f0f\uff0c\u5e38\u7528\u7684\u6709 User-mode emulation \u548c System emulation \u4e24\u79cd\u3002","title":"\u8fd0\u884c\u6a21\u5f0f"},{"location":"binary-core-tools/virtualization/qemu/qemu-introduction/#user-mode-emulation","text":"\u7528\u6237\u6a21\u5f0f\uff0c\u5728\u8fd9\u4e2a\u6a21\u5f0f\u4e0b\uff0cqemu \u53ef\u4ee5\u8fd0\u884c\u5355\u4e2a\u5176\u4ed6\u6307\u4ee4\u96c6\u7684 linux \u6216\u8005 macOS/darwin \u7a0b\u5e8f\uff0c \u5141\u8bb8\u4e86\u4e3a\u4e00\u79cd\u67b6\u6784\u7f16\u8bd1\u7684\u7a0b\u5e8f\u5728\u53e6\u5916\u4e00\u79cd\u67b6\u6784\u4e0a\u9762\u8fd0\u884c \u3002","title":"User-mode emulation"},{"location":"binary-core-tools/virtualization/qemu/qemu-introduction/#system-emulation","text":"\u7cfb\u7edf\u6a21\u5f0f\uff0c\u5728\u8fd9\u4e2a\u6a21\u5f0f\u4e0b\uff0cqemu \u5c06\u6a21\u62df\u4e00\u4e2a\u5b8c\u6574\u7684\u8ba1\u7b97\u673a\u7cfb\u7edf\uff0c\u5305\u62ec\u5916\u56f4\u8bbe\u5907\u3002 \u4e4b\u540e\u5c06\u5206\u522b\u4e3a\u4e24\u79cd\u60c5\u51b5\u4e3e\u4f8b","title":"System emulation"},{"location":"binary-core-tools/virtualization/qemu/qemu-introduction/#reference","text":"https://wiki.qemu.org/Main_Page https://qemu.weilnetz.de/doc/qemu-doc.html https://wiki.qemu.org/Documentation https://en.wikipedia.org/wiki/QEMU","title":"Reference"},{"location":"web-tools/burpsuite/","text":"burpsuite","title":"Burp Suite"},{"location":"web-tools/fiddle/","text":"fiddle","title":"Fiddler"},{"location":"web-tools/web/","text":"Web \u00b6 \u83dc\u5200 \u00b6 \u4e60\u79d1\u5175\u5668\u5e93\u7248\u83dc\u5200 \u5b98\u7f51\u65b0\u7248\u83dc\u5200 \u89e3\u538b\u5bc6\u7801 www.maicaidao.com CKnife \u5bc6\u7801\uff1af65g \u6ce8\u5165 \u00b6 sqlmap Installation You can download the latest tarball by clicking here or latest zipball by clicking here . Preferably, you can download sqlmap by cloning the Git repository: git clone --depth 1 https://github.com/sqlmapproject/sqlmap.git sqlmap-dev sqlmap works out of the box with Python version 2.6.x and 2.7.x on any platform. Usage To get a list of basic options and switches use: python sqlmap.py -h To get a list of all options and switches use: python sqlmap.py -hh You can find a sample run here . To get an overview of sqlmap capabilities, list of supported features and description of all options and switches, along with examples, you are advised to consult the user's manual . \u622a\u81f3 2016 \u5e74 12 \u6708 27 \u65e5 master \u5206\u652f\u6253\u5305 \u6293\u5305 \u00b6 Burp Suite 1.6 pro WireShark 2.2.3 win32 PKAV HTTP FUZZER \u5e26\u4e00\u70b9\u7b80\u5355\u7684\u9a8c\u8bc1\u7801\u8bc6\u522b\u3002 \u76ee\u5f55\u626b\u63cf \u00b6 \u5fa1\u5251\u540e\u53f0\u626b\u63cf \u81ea\u7528\u5fa1\u5251\u5b57\u5178 dirfuzz weakfilescan dirfuzz \u8fdb\u9636\u7248\u3002 \u622a\u81f3 2016 \u5e74 12 \u6708 27 \u65e5 master \u5206\u652f\u6253\u5305 \u732a\u732a\u4fa0\u5b57\u5178\u6253\u5305 Github \u4e0a\u67d0\u4e0d\u660e\u5b57\u5178 \u6e90\u7801\u6cc4\u9732 \u00b6 Seay - SVN \u6e90\u7801\u6cc4\u9732\u5229\u7528\u5de5\u5177 Githack \u7528\u6cd5\u793a\u4f8b GitHack.py http://www.openssl.org/.git/ \u622a\u81f3 2016 \u5e74 12 \u6708 27 \u65e5 master \u5206\u652f\u6253\u5305 \u65e5\u5fd7\u5206\u6790 \u00b6 LogForensics \u65e5\u5fd7\u5206\u6790 Perl \u811a\u672c\uff0c\u4f7f\u7528\u65b9\u6cd5\uff1a Perl LogForensics.pl -file logfile -websvr ( nginx | httpd ) [ -ip ip ( ip,ip,ip ) | -url url ( url,url,url )] file \uff1a\u65e5\u5fd7\u6587\u4ef6\u8def\u5f84 websvr \uff1a\u65e5\u5fd7\u7c7b\u578b ip \uff1a\u8d77\u59cb\u8c03\u67e5 ip \u6216 ip \u5217\u8868\uff0c\u4ee5\u9017\u53f7\u5206\u5272 url \uff1a\u8d77\u59cb\u8c03\u67e5 cgi \u94fe\u63a5\u6216\u94fe\u63a5\u5217\u8868\uff0c\u4ee5\u9017\u53f7\u5206\u5272 ngxtop real-time metrics for nginx server (and others) \u5b89\u88c5\uff1a pip install ngxtop \u793a\u4f8b\uff1a ngxtop top remote_addr # View top source IPs of clients ngxtop -i 'status >= 400' print request status http_referer # List 4xx or 5xx responses together with HTTP referer tail -f /var/log/apache2/access.log | ngxtop -f common # Parse apache log from remote server with common format \u5185\u7f51 \u00b6 Termite \u8df3\u677f\u673a\u7ba1\u7406\u5de5\u5177\u3002 \u4e0b\u8f7d \u4ee5\u670d\u52a1\u6a21\u5f0f\u542f\u52a8\u4e00\u4e2a agent \u670d\u52a1\u3002 $ ./agent -l p 8888 \u4ee4\u7ba1\u7406\u7aef\u8fde\u63a5\u5230 agent \u5e76\u5bf9 agent \u8fdb\u884c\u7ba1\u7406\u3002 $ ./admin -c 127 .0.0.1 -p 8888 \u6b64\u65f6\uff0cadmin \u7aef\u4f1a\u5f97\u5230\u4e00\u4e2a\u5185\u7f6e\u7684 shell\uff0c\u8f93\u5165 help \u6307\u4ee4\u53ef\u4ee5\u5f97\u5230\u5e2e\u52a9\u4fe1\u606f\u3002 >> help \u901a\u8fc7 show \u6307\u4ee4\u53ef\u4ee5\u5f97\u5230\u5f53\u524d agent \u7684\u62d3\u6251\u60c5\u51b5\u3002 >> show 0M +-- 1M \u7531\u4e8e\u5f53\u524d\u62d3\u6251\u4e2d\u53ea\u6709\u4e00\u4e2aagent\uff0c\u6240\u4ee5\u5c55\u793a\u7ed3\u679c\u53ea\u6709 1M , \u5176\u4e2d1 \u4e3a\u8282\u70b9\u7684ID\u53f7\uff0c M\u4e3aMacOS\u7cfb\u7edf\u7684\u7b80\u5199\uff0cLinux\u4e3aL\uff0cWindows\u7b80\u5199\u4e3aW\u3002 \u5c06\u65b0 agent \u52a0\u5165\u5f53\u524d\u62d3\u6251\u3002 ./agent -c 127 .0.0.1 -p 8888 \u6b64\u65f6 show \u6307\u4ee4\u5c06\u5f97\u5230\u5982\u4e0b\u6548\u679c\u3002 0M +-- 1M | +-- 2M \u8fd9\u8868\u660e\uff0c\u5f53\u524d\u62d3\u6251\u4e2d\u6709\u4e24\u4e2a\u8282\u70b9\uff0c\u5176\u4e2d\u7531\u4e8e2\u8282\u70b9\u9700\u8981\u901a\u8fc71\u8282\u70b9\u624d\u80fd\u8bbf\u95ee\uff0c\u6240\u4ee5\u4e0b\u6302\u57281\u8282\u70b9\u4e0b\u65b9\u3002 \u5728 2 \u8282\u70b9\u5f00\u542f socks \u4ee3\u7406\uff0c\u5e76\u7ed1\u5b9a\u5728\u672c\u5730\u7aef\u53e3 >> goto 2 \u5c06\u5f53\u524d\u88ab\u7ba1\u7406\u8282\u70b9\u5207\u6362\u4e3a 2 \u53f7\u8282\u70b9\u3002 >> socks 1080 \u6b64\u65f6\uff0c\u672c\u57301080 \u7aef\u53e3\u4f1a\u542f\u52a8\u4e2a\u76d1\u542c\u670d\u52a1\uff0c\u800c\u670d\u52a1\u63d0\u4f9b\u8005\u4e3a2\u53f7\u8282\u70b9\u3002 \u5728 1 \u53f7\u8282\u70b9\u5f00\u542f\u4e00\u4e2a shell \u5e76\u7ed1\u5b9a\u5230\u672c\u5730\u7aef\u53e3 >> goto 1 >> shell 7777 \u6b64\u65f6\uff0c\u901a\u8fc7nc\u672c\u5730\u7684 7777 \u7aef\u53e3\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a 1 \u8282\u70b9\u63d0\u4f9b\u7684 shell. \u5c06\u8fdc\u7a0b\u7684\u6587\u4ef6\u4e0b\u8f7d\u81f3\u672c\u5730 >> goto 1 >> downfile 1 .txt 2 .txt \u5c061 \u8282\u70b9\uff0c\u76ee\u5f55\u4e0b\u7684 1 .txt \u4e0b\u8f7d\u81f3\u672c\u5730\uff0c\u5e76\u547d\u540d\u4e3a2.txt \u4e0a\u4f20\u6587\u4ef6\u81f3\u8fdc\u7a0b\u8282\u70b9 >> goto 2 >> upfile 2 .txt 3 .txt \u5c06\u672c\u5730\u7684 2 .txt \u4e0a\u4f20\u81f3 2\u53f7\u8282\u70b9\u7684\u76ee\u5f55\uff0c\u5e76\u547d\u540d\u4e3a3.txt \u7aef\u53e3\u8f6c\u63a5 >> goto 2 >> lcxtran 3388 10 .0.0.1 3389 \u4ee52\u53f7\u8282\u70b9\u4e3a\u8df3\u677f\uff0c\u5c06 10 .0.0.1 \u7684 3389 \u7aef\u53e3\u6620\u5c04\u81f3\u672c\u5730\u7684 3388 \u7aef\u53e3 \u66f4\u591a\u652f\u6301 http://rootkiter.com/toolvideo/toolmp4/1maintalk.mp4 http://rootkiter.com/toolvideo/toolmp4/2socks.mp4 http://rootkiter.com/toolvideo/toolmp4/3lcxtran.mp4 http://rootkiter.com/toolvideo/toolmp4/4shell.mp4 http://rootkiter.com/toolvideo/toolmp4/5file.mp4","title":"Web \u7f51\u7ad9\u5e94\u7528"},{"location":"web-tools/web/#web","text":"","title":"Web"},{"location":"web-tools/web/#_1","text":"\u4e60\u79d1\u5175\u5668\u5e93\u7248\u83dc\u5200 \u5b98\u7f51\u65b0\u7248\u83dc\u5200 \u89e3\u538b\u5bc6\u7801 www.maicaidao.com CKnife \u5bc6\u7801\uff1af65g","title":"\u83dc\u5200"},{"location":"web-tools/web/#_2","text":"sqlmap Installation You can download the latest tarball by clicking here or latest zipball by clicking here . Preferably, you can download sqlmap by cloning the Git repository: git clone --depth 1 https://github.com/sqlmapproject/sqlmap.git sqlmap-dev sqlmap works out of the box with Python version 2.6.x and 2.7.x on any platform. Usage To get a list of basic options and switches use: python sqlmap.py -h To get a list of all options and switches use: python sqlmap.py -hh You can find a sample run here . To get an overview of sqlmap capabilities, list of supported features and description of all options and switches, along with examples, you are advised to consult the user's manual . \u622a\u81f3 2016 \u5e74 12 \u6708 27 \u65e5 master \u5206\u652f\u6253\u5305","title":"\u6ce8\u5165"},{"location":"web-tools/web/#_3","text":"Burp Suite 1.6 pro WireShark 2.2.3 win32 PKAV HTTP FUZZER \u5e26\u4e00\u70b9\u7b80\u5355\u7684\u9a8c\u8bc1\u7801\u8bc6\u522b\u3002","title":"\u6293\u5305"},{"location":"web-tools/web/#_4","text":"\u5fa1\u5251\u540e\u53f0\u626b\u63cf \u81ea\u7528\u5fa1\u5251\u5b57\u5178 dirfuzz weakfilescan dirfuzz \u8fdb\u9636\u7248\u3002 \u622a\u81f3 2016 \u5e74 12 \u6708 27 \u65e5 master \u5206\u652f\u6253\u5305 \u732a\u732a\u4fa0\u5b57\u5178\u6253\u5305 Github \u4e0a\u67d0\u4e0d\u660e\u5b57\u5178","title":"\u76ee\u5f55\u626b\u63cf"},{"location":"web-tools/web/#_5","text":"Seay - SVN \u6e90\u7801\u6cc4\u9732\u5229\u7528\u5de5\u5177 Githack \u7528\u6cd5\u793a\u4f8b GitHack.py http://www.openssl.org/.git/ \u622a\u81f3 2016 \u5e74 12 \u6708 27 \u65e5 master \u5206\u652f\u6253\u5305","title":"\u6e90\u7801\u6cc4\u9732"},{"location":"web-tools/web/#_6","text":"LogForensics \u65e5\u5fd7\u5206\u6790 Perl \u811a\u672c\uff0c\u4f7f\u7528\u65b9\u6cd5\uff1a Perl LogForensics.pl -file logfile -websvr ( nginx | httpd ) [ -ip ip ( ip,ip,ip ) | -url url ( url,url,url )] file \uff1a\u65e5\u5fd7\u6587\u4ef6\u8def\u5f84 websvr \uff1a\u65e5\u5fd7\u7c7b\u578b ip \uff1a\u8d77\u59cb\u8c03\u67e5 ip \u6216 ip \u5217\u8868\uff0c\u4ee5\u9017\u53f7\u5206\u5272 url \uff1a\u8d77\u59cb\u8c03\u67e5 cgi \u94fe\u63a5\u6216\u94fe\u63a5\u5217\u8868\uff0c\u4ee5\u9017\u53f7\u5206\u5272 ngxtop real-time metrics for nginx server (and others) \u5b89\u88c5\uff1a pip install ngxtop \u793a\u4f8b\uff1a ngxtop top remote_addr # View top source IPs of clients ngxtop -i 'status >= 400' print request status http_referer # List 4xx or 5xx responses together with HTTP referer tail -f /var/log/apache2/access.log | ngxtop -f common # Parse apache log from remote server with common format","title":"\u65e5\u5fd7\u5206\u6790"},{"location":"web-tools/web/#_7","text":"Termite \u8df3\u677f\u673a\u7ba1\u7406\u5de5\u5177\u3002 \u4e0b\u8f7d \u4ee5\u670d\u52a1\u6a21\u5f0f\u542f\u52a8\u4e00\u4e2a agent \u670d\u52a1\u3002 $ ./agent -l p 8888 \u4ee4\u7ba1\u7406\u7aef\u8fde\u63a5\u5230 agent \u5e76\u5bf9 agent \u8fdb\u884c\u7ba1\u7406\u3002 $ ./admin -c 127 .0.0.1 -p 8888 \u6b64\u65f6\uff0cadmin \u7aef\u4f1a\u5f97\u5230\u4e00\u4e2a\u5185\u7f6e\u7684 shell\uff0c\u8f93\u5165 help \u6307\u4ee4\u53ef\u4ee5\u5f97\u5230\u5e2e\u52a9\u4fe1\u606f\u3002 >> help \u901a\u8fc7 show \u6307\u4ee4\u53ef\u4ee5\u5f97\u5230\u5f53\u524d agent \u7684\u62d3\u6251\u60c5\u51b5\u3002 >> show 0M +-- 1M \u7531\u4e8e\u5f53\u524d\u62d3\u6251\u4e2d\u53ea\u6709\u4e00\u4e2aagent\uff0c\u6240\u4ee5\u5c55\u793a\u7ed3\u679c\u53ea\u6709 1M , \u5176\u4e2d1 \u4e3a\u8282\u70b9\u7684ID\u53f7\uff0c M\u4e3aMacOS\u7cfb\u7edf\u7684\u7b80\u5199\uff0cLinux\u4e3aL\uff0cWindows\u7b80\u5199\u4e3aW\u3002 \u5c06\u65b0 agent \u52a0\u5165\u5f53\u524d\u62d3\u6251\u3002 ./agent -c 127 .0.0.1 -p 8888 \u6b64\u65f6 show \u6307\u4ee4\u5c06\u5f97\u5230\u5982\u4e0b\u6548\u679c\u3002 0M +-- 1M | +-- 2M \u8fd9\u8868\u660e\uff0c\u5f53\u524d\u62d3\u6251\u4e2d\u6709\u4e24\u4e2a\u8282\u70b9\uff0c\u5176\u4e2d\u7531\u4e8e2\u8282\u70b9\u9700\u8981\u901a\u8fc71\u8282\u70b9\u624d\u80fd\u8bbf\u95ee\uff0c\u6240\u4ee5\u4e0b\u6302\u57281\u8282\u70b9\u4e0b\u65b9\u3002 \u5728 2 \u8282\u70b9\u5f00\u542f socks \u4ee3\u7406\uff0c\u5e76\u7ed1\u5b9a\u5728\u672c\u5730\u7aef\u53e3 >> goto 2 \u5c06\u5f53\u524d\u88ab\u7ba1\u7406\u8282\u70b9\u5207\u6362\u4e3a 2 \u53f7\u8282\u70b9\u3002 >> socks 1080 \u6b64\u65f6\uff0c\u672c\u57301080 \u7aef\u53e3\u4f1a\u542f\u52a8\u4e2a\u76d1\u542c\u670d\u52a1\uff0c\u800c\u670d\u52a1\u63d0\u4f9b\u8005\u4e3a2\u53f7\u8282\u70b9\u3002 \u5728 1 \u53f7\u8282\u70b9\u5f00\u542f\u4e00\u4e2a shell \u5e76\u7ed1\u5b9a\u5230\u672c\u5730\u7aef\u53e3 >> goto 1 >> shell 7777 \u6b64\u65f6\uff0c\u901a\u8fc7nc\u672c\u5730\u7684 7777 \u7aef\u53e3\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a 1 \u8282\u70b9\u63d0\u4f9b\u7684 shell. \u5c06\u8fdc\u7a0b\u7684\u6587\u4ef6\u4e0b\u8f7d\u81f3\u672c\u5730 >> goto 1 >> downfile 1 .txt 2 .txt \u5c061 \u8282\u70b9\uff0c\u76ee\u5f55\u4e0b\u7684 1 .txt \u4e0b\u8f7d\u81f3\u672c\u5730\uff0c\u5e76\u547d\u540d\u4e3a2.txt \u4e0a\u4f20\u6587\u4ef6\u81f3\u8fdc\u7a0b\u8282\u70b9 >> goto 2 >> upfile 2 .txt 3 .txt \u5c06\u672c\u5730\u7684 2 .txt \u4e0a\u4f20\u81f3 2\u53f7\u8282\u70b9\u7684\u76ee\u5f55\uff0c\u5e76\u547d\u540d\u4e3a3.txt \u7aef\u53e3\u8f6c\u63a5 >> goto 2 >> lcxtran 3388 10 .0.0.1 3389 \u4ee52\u53f7\u8282\u70b9\u4e3a\u8df3\u677f\uff0c\u5c06 10 .0.0.1 \u7684 3389 \u7aef\u53e3\u6620\u5c04\u81f3\u672c\u5730\u7684 3388 \u7aef\u53e3 \u66f4\u591a\u652f\u6301 http://rootkiter.com/toolvideo/toolmp4/1maintalk.mp4 http://rootkiter.com/toolvideo/toolmp4/2socks.mp4 http://rootkiter.com/toolvideo/toolmp4/3lcxtran.mp4 http://rootkiter.com/toolvideo/toolmp4/4shell.mp4 http://rootkiter.com/toolvideo/toolmp4/5file.mp4","title":"\u5185\u7f51"},{"location":"web-tools/wireshark/","text":"wireshark","title":"Wireshark"},{"location":"windows-binary-related/PE/die/","text":"die","title":"Die"},{"location":"windows-binary-related/PE/exeinfo/","text":"exeinfo","title":"ExeInfo"},{"location":"windows-binary-related/PE/importrec/","text":"ImportREC","title":"PEiD"},{"location":"windows-binary-related/PE/peid/","text":"peid","title":"Peid"},{"location":"windows-binary-related/debugger/cheat_engine/","text":"chear_engine","title":"Cheat Engine"},{"location":"windows-binary-related/debugger/immunity_debugger/","text":"immunity","title":"Immunity Debugger"},{"location":"windows-binary-related/debugger/ollydbg/","text":"ollydbg","title":"OllyDbg"},{"location":"windows-binary-related/debugger/windbg/","text":"windbg","title":"WinDbg"},{"location":"windows-binary-related/debugger/x32_x64_debugger/","text":"x32_x64_debugger","title":"x32/x64 Debugger"},{"location":"windows-binary-related/disassembler_and_decomplier/hopper/","text":"hopper","title":"Hopper"},{"location":"windows-binary-related/disassembler_and_decomplier/ida/","text":"ida","title":"IDA"},{"location":"windows-binary-related/disassembler_and_decomplier/radare2_and_cutter/","text":"radare2_and_cutter","title":"Radare2/Cutter"}]}